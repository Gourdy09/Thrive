{"version":3,"file":"BuildWorkflowValidator.js","sourceRoot":"","sources":["../src/BuildWorkflowValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\n\nimport fs from 'fs-extra';\n\nimport { BuildStep } from './BuildStep.js';\nimport { BuildStepInputValueTypeName } from './BuildStepInput.js';\nimport { BuildWorkflow } from './BuildWorkflow.js';\nimport { BuildConfigError, BuildWorkflowError } from './errors.js';\nimport { duplicates } from './utils/expodash/duplicates.js';\nimport { nullthrows } from './utils/nullthrows.js';\nimport { findOutputPaths } from './utils/template.js';\n\nexport class BuildWorkflowValidator {\n  constructor(private readonly workflow: BuildWorkflow) {}\n\n  public async validateAsync(): Promise<void> {\n    const errors: BuildConfigError[] = [];\n    errors.push(...this.validateUniqueStepIds());\n    errors.push(...this.validateInputs());\n    errors.push(...this.validateAllowedPlatforms());\n    errors.push(...(await this.validateCustomFunctionModulesAsync()));\n    if (errors.length !== 0) {\n      throw new BuildWorkflowError('Build workflow is invalid.', errors);\n    }\n  }\n\n  private validateUniqueStepIds(): BuildConfigError[] {\n    const stepIds = this.workflow.buildSteps.map(({ id }) => id);\n    const duplicatedStepIds = duplicates(stepIds);\n    if (duplicatedStepIds.length === 0) {\n      return [];\n    } else {\n      const error = new BuildConfigError(\n        `Duplicated step IDs: ${duplicatedStepIds.map((i) => `\"${i}\"`).join(', ')}`\n      );\n      return [error];\n    }\n  }\n\n  private validateInputs(): BuildConfigError[] {\n    const errors: BuildConfigError[] = [];\n\n    const allStepIds = new Set(this.workflow.buildSteps.map((s) => s.id));\n    const visitedStepByStepId: Record<string, BuildStep> = {};\n    for (const currentStep of this.workflow.buildSteps) {\n      for (const currentStepInput of currentStep.inputs ?? []) {\n        if (currentStepInput.required && currentStepInput.rawValue === undefined) {\n          const error = new BuildConfigError(\n            `Input parameter \"${currentStepInput.id}\" for step \"${currentStep.displayName}\" is required but it was not set.`\n          );\n          errors.push(error);\n        }\n\n        const currentType =\n          typeof currentStepInput.rawValue === 'object'\n            ? BuildStepInputValueTypeName.JSON\n            : typeof currentStepInput.rawValue;\n        if (\n          currentStepInput.rawValue !== undefined &&\n          !currentStepInput.isRawValueStepOrContextReference() &&\n          currentType !== currentStepInput.allowedValueTypeName\n        ) {\n          const error = new BuildConfigError(\n            `Input parameter \"${currentStepInput.id}\" for step \"${\n              currentStep.displayName\n            }\" is set to \"${\n              typeof currentStepInput.rawValue === 'object'\n                ? JSON.stringify(currentStepInput.rawValue)\n                : currentStepInput.rawValue\n            }\" which is not of type \"${\n              currentStepInput.allowedValueTypeName\n            }\" or is not step or context reference.`\n          );\n          errors.push(error);\n        }\n\n        if (currentStepInput.defaultValue === undefined) {\n          continue;\n        }\n        if (!currentStepInput.isValueOneOfAllowedValues()) {\n          const error = new BuildConfigError(\n            `Input parameter \"${currentStepInput.id}\" for step \"${\n              currentStep.displayName\n            }\" is set to \"${\n              currentStepInput.value\n            }\" which is not one of the allowed values: ${nullthrows(currentStepInput.allowedValues)\n              .map((i) => `\"${i}\"`)\n              .join(', ')}.`\n          );\n          errors.push(error);\n        }\n        const paths =\n          typeof currentStepInput.defaultValue === 'string'\n            ? findOutputPaths(currentStepInput.defaultValue)\n            : [];\n        for (const { stepId: referencedStepId, outputId: referencedStepOutputId } of paths) {\n          if (!(referencedStepId in visitedStepByStepId)) {\n            if (allStepIds.has(referencedStepId)) {\n              const error = new BuildConfigError(\n                `Input parameter \"${currentStepInput.id}\" for step \"${currentStep.displayName}\" uses an expression that references an output parameter from the future step \"${referencedStepId}\".`\n              );\n              errors.push(error);\n            } else {\n              const error = new BuildConfigError(\n                `Input parameter \"${currentStepInput.id}\" for step \"${currentStep.displayName}\" uses an expression that references an output parameter from a non-existent step \"${referencedStepId}\".`\n              );\n              errors.push(error);\n            }\n          } else {\n            if (!visitedStepByStepId[referencedStepId].hasOutputParameter(referencedStepOutputId)) {\n              const error = new BuildConfigError(\n                `Input parameter \"${currentStepInput.id}\" for step \"${currentStep.displayName}\" uses an expression that references an undefined output parameter \"${referencedStepOutputId}\" from step \"${referencedStepId}\".`\n              );\n              errors.push(error);\n            }\n          }\n        }\n      }\n      visitedStepByStepId[currentStep.id] = currentStep;\n    }\n\n    return errors;\n  }\n\n  private validateAllowedPlatforms(): BuildConfigError[] {\n    const errors: BuildConfigError[] = [];\n    for (const step of this.workflow.buildSteps) {\n      if (!step.canBeRunOnRuntimePlatform()) {\n        const error = new BuildConfigError(\n          `Step \"${step.displayName}\" is not allowed on platform \"${\n            step.ctx.global.runtimePlatform\n          }\". Allowed platforms for this step are: ${nullthrows(\n            step.supportedRuntimePlatforms,\n            `step.supportedRuntimePlatforms can't be falsy if canBeRunOnRuntimePlatform() is false`\n          )\n            .map((p) => `\"${p}\"`)\n            .join(', ')}.`\n        );\n        errors.push(error);\n      }\n    }\n    return errors;\n  }\n\n  private async validateCustomFunctionModulesAsync(): Promise<BuildConfigError[]> {\n    const errors: BuildConfigError[] = [];\n    for (const buildFunction of Object.values(this.workflow.buildFunctions)) {\n      if (!buildFunction.customFunctionModulePath) {\n        continue;\n      }\n\n      if (!(await fs.exists(buildFunction.customFunctionModulePath))) {\n        const error = new BuildConfigError(\n          `Custom function module path \"${buildFunction.customFunctionModulePath}\" for function \"${buildFunction.id}\" does not exist.`\n        );\n        errors.push(error);\n        continue;\n      }\n\n      if (!(await fs.exists(path.join(buildFunction.customFunctionModulePath, 'package.json')))) {\n        const error = new BuildConfigError(\n          `Custom function module path \"${buildFunction.customFunctionModulePath}\" for function \"${buildFunction.id}\" does not contain a package.json file.`\n        );\n        errors.push(error);\n      }\n    }\n    return errors;\n  }\n}\n"]}