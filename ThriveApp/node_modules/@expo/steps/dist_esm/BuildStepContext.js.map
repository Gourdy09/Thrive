{"version":3,"file":"BuildStepContext.js","sourceRoot":"","sources":["../src/BuildStepContext.ts"],"names":[],"mappings":"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","sourcesContent":["import os from 'os';\nimport path from 'path';\n\nimport { BuildStaticContext } from '@expo/eas-build-job';\nimport { bunyan } from '@expo/logger';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  BuildStep,\n  BuildStepOutputAccessor,\n  SerializedBuildStepOutputAccessor,\n} from './BuildStep.js';\nimport {\n  getObjectValueForInterpolation,\n  interpolateWithGlobalContext,\n  parseOutputPath,\n} from './utils/template.js';\nimport { BuildStepRuntimeError } from './errors.js';\nimport { BuildRuntimePlatform } from './BuildRuntimePlatform.js';\nimport { BuildStepEnv } from './BuildStepEnv.js';\n\ninterface SerializedExternalBuildContextProvider {\n  projectSourceDirectory: string;\n  projectTargetDirectory: string;\n  defaultWorkingDirectory: string;\n  buildLogsDirectory: string;\n  runtimePlatform: BuildRuntimePlatform;\n  staticContext: BuildStaticContext;\n  env: BuildStepEnv;\n}\n\nexport interface ExternalBuildContextProvider {\n  readonly projectSourceDirectory: string;\n  readonly projectTargetDirectory: string;\n  readonly defaultWorkingDirectory: string;\n  readonly buildLogsDirectory: string;\n  readonly runtimePlatform: BuildRuntimePlatform;\n  readonly logger: bunyan;\n\n  readonly staticContext: () => BuildStaticContext;\n\n  readonly env: BuildStepEnv;\n  updateEnv(env: BuildStepEnv): void;\n}\n\nexport interface SerializedBuildStepGlobalContext {\n  stepsInternalBuildDirectory: string;\n  stepById: Record<string, SerializedBuildStepOutputAccessor>;\n  provider: SerializedExternalBuildContextProvider;\n  skipCleanup: boolean;\n}\n\nexport class BuildStepGlobalContext {\n  public stepsInternalBuildDirectory: string;\n  public readonly runtimePlatform: BuildRuntimePlatform;\n  public readonly baseLogger: bunyan;\n  private didCheckOut = false;\n\n  private stepById: Record<string, BuildStepOutputAccessor> = {};\n\n  constructor(\n    private readonly provider: ExternalBuildContextProvider,\n    public readonly skipCleanup: boolean\n  ) {\n    this.stepsInternalBuildDirectory = path.join(os.tmpdir(), 'eas-build', uuidv4());\n    this.runtimePlatform = provider.runtimePlatform;\n    this.baseLogger = provider.logger;\n  }\n\n  public get projectSourceDirectory(): string {\n    return this.provider.projectSourceDirectory;\n  }\n\n  public get projectTargetDirectory(): string {\n    return this.provider.projectTargetDirectory;\n  }\n\n  public get defaultWorkingDirectory(): string {\n    return this.didCheckOut ? this.provider.defaultWorkingDirectory : this.projectTargetDirectory;\n  }\n\n  public get buildLogsDirectory(): string {\n    return this.provider.buildLogsDirectory;\n  }\n\n  public get env(): BuildStepEnv {\n    return this.provider.env;\n  }\n\n  public get staticContext(): BuildStaticContext {\n    return this.provider.staticContext();\n  }\n\n  public updateEnv(updatedEnv: BuildStepEnv): void {\n    this.provider.updateEnv(updatedEnv);\n  }\n\n  public registerStep(step: BuildStep): void {\n    this.stepById[step.id] = step;\n  }\n\n  public getStepOutputValue(path: string): string | undefined {\n    const { stepId, outputId } = parseOutputPath(path);\n    if (!(stepId in this.stepById)) {\n      throw new BuildStepRuntimeError(`Step \"${stepId}\" does not exist.`);\n    }\n    return this.stepById[stepId].getOutputValueByName(outputId);\n  }\n\n  public interpolate<InterpolableType extends string | object>(\n    value: InterpolableType\n  ): InterpolableType {\n    return interpolateWithGlobalContext(value, (path) => {\n      return (\n        getObjectValueForInterpolation(path, {\n          eas: {\n            runtimePlatform: this.runtimePlatform,\n            ...this.staticContext,\n          },\n        })?.toString() ?? ''\n      );\n    });\n  }\n\n  public stepCtx(options: { logger: bunyan; relativeWorkingDirectory?: string }): BuildStepContext {\n    return new BuildStepContext(this, options);\n  }\n\n  public markAsCheckedOut(logger: bunyan): void {\n    this.didCheckOut = true;\n    logger.info(\n      `Changing default working directory to ${this.defaultWorkingDirectory} (was ${this.projectTargetDirectory})`\n    );\n  }\n\n  public wasCheckedOut(): boolean {\n    return this.didCheckOut;\n  }\n\n  public serialize(): SerializedBuildStepGlobalContext {\n    return {\n      stepsInternalBuildDirectory: this.stepsInternalBuildDirectory,\n      stepById: Object.fromEntries(\n        Object.entries(this.stepById).map(([id, step]) => [id, step.serialize()])\n      ),\n      provider: {\n        projectSourceDirectory: this.provider.projectSourceDirectory,\n        projectTargetDirectory: this.provider.projectTargetDirectory,\n        defaultWorkingDirectory: this.provider.defaultWorkingDirectory,\n        buildLogsDirectory: this.provider.buildLogsDirectory,\n        runtimePlatform: this.provider.runtimePlatform,\n        staticContext: this.provider.staticContext(),\n        env: this.provider.env,\n      },\n      skipCleanup: this.skipCleanup,\n    };\n  }\n\n  public static deserialize(\n    serialized: SerializedBuildStepGlobalContext,\n    logger: bunyan\n  ): BuildStepGlobalContext {\n    const deserializedProvider: ExternalBuildContextProvider = {\n      projectSourceDirectory: serialized.provider.projectSourceDirectory,\n      projectTargetDirectory: serialized.provider.projectTargetDirectory,\n      defaultWorkingDirectory: serialized.provider.defaultWorkingDirectory,\n      buildLogsDirectory: serialized.provider.buildLogsDirectory,\n      runtimePlatform: serialized.provider.runtimePlatform,\n      logger,\n      staticContext: () => serialized.provider.staticContext,\n      env: serialized.provider.env,\n      updateEnv: () => {},\n    };\n    const ctx = new BuildStepGlobalContext(deserializedProvider, serialized.skipCleanup);\n    for (const [id, stepOutputAccessor] of Object.entries(serialized.stepById)) {\n      ctx.stepById[id] = BuildStepOutputAccessor.deserialize(stepOutputAccessor);\n    }\n    ctx.stepsInternalBuildDirectory = serialized.stepsInternalBuildDirectory;\n\n    return ctx;\n  }\n}\n\nexport interface SerializedBuildStepContext {\n  relativeWorkingDirectory?: string;\n  global: SerializedBuildStepGlobalContext;\n}\n\nexport class BuildStepContext {\n  public readonly logger: bunyan;\n  public readonly relativeWorkingDirectory?: string;\n\n  constructor(\n    private readonly ctx: BuildStepGlobalContext,\n    {\n      logger,\n      relativeWorkingDirectory,\n    }: {\n      logger: bunyan;\n      relativeWorkingDirectory?: string;\n    }\n  ) {\n    this.logger = logger ?? ctx.baseLogger;\n    this.relativeWorkingDirectory = relativeWorkingDirectory;\n  }\n\n  public get global(): BuildStepGlobalContext {\n    return this.ctx;\n  }\n\n  public get workingDirectory(): string {\n    return this.relativeWorkingDirectory\n      ? path.resolve(this.ctx.defaultWorkingDirectory, this.relativeWorkingDirectory)\n      : this.ctx.defaultWorkingDirectory;\n  }\n\n  public serialize(): SerializedBuildStepContext {\n    return {\n      relativeWorkingDirectory: this.relativeWorkingDirectory,\n      global: this.ctx.serialize(),\n    };\n  }\n\n  public static deserialize(\n    serialized: SerializedBuildStepContext,\n    logger: bunyan\n  ): BuildStepContext {\n    const deserializedGlobal = BuildStepGlobalContext.deserialize(serialized.global, logger);\n    return new BuildStepContext(deserializedGlobal, {\n      logger,\n      relativeWorkingDirectory: serialized.relativeWorkingDirectory,\n    });\n  }\n}\n"]}