{"version":3,"file":"BuildStepOutput.js","sourceRoot":"","sources":["../src/BuildStepOutput.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,qBAAqB,EAAE,MAAM,aAAa,CAAC;AA6BpD,MAAM,OAAO,eAAe;IAOnB,MAAM,CAAC,cAAc,CAAC,MAAqC;QAChE,OAAO,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,CAAC,IAAI,eAAe,CAAC,GAAG,EAAE,EAAE,GAAG,MAAM,EAAE,eAAe,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED;IACE,wFAAwF;IACvE,GAAuC,EACxD,EAAE,EAAE,EAAE,eAAe,EAAE,QAAQ,EAA4B;QAD1C,QAAG,GAAH,GAAG,CAAoC;QAGxD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAW,KAAK;QACd,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YAC/C,MAAM,IAAI,qBAAqB,CAC7B,qBAAqB,IAAI,CAAC,EAAE,eAAe,IAAI,CAAC,eAAe,mCAAmC,CACnG,CAAC;QACJ,CAAC;QACD,OAAO,IAAI,CAAC,MAAqC,CAAC;IACpD,CAAC;IAEM,GAAG,CAAC,KAAkC;QAC3C,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YACzC,MAAM,IAAI,qBAAqB,CAC7B,qBAAqB,IAAI,CAAC,EAAE,eAAe,IAAI,CAAC,eAAe,gBAAgB,CAChF,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,SAAS;QACd,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,MAAM;SACnB,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,WAAW,CAAC,UAAqC;QAC7D,MAAM,YAAY,GAAG,IAAI,eAAe,CAAC,SAAS,EAAE;YAClD,EAAE,EAAE,UAAU,CAAC,EAAE;YACjB,eAAe,EAAE,UAAU,CAAC,eAAe;YAC3C,QAAQ,EAAE,UAAU,CAAC,QAAQ;SAC9B,CAAC,CAAC;QACH,YAAY,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC;QACvC,OAAO,YAAY,CAAC;IACtB,CAAC;CACF;AAED,MAAM,UAAU,0BAA0B,CAAC,OAA2B;IACpE,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;QAC1B,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;QACpC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;QACxB,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAyB,CAAC,CAAC;AAChC,CAAC","sourcesContent":["import { BuildStepGlobalContext } from './BuildStepContext.js';\nimport { BuildStepRuntimeError } from './errors.js';\n\nexport type BuildStepOutputById = Record<string, BuildStepOutput>;\nexport type BuildStepOutputProvider = (\n  ctx: BuildStepGlobalContext,\n  stepDisplayName: string\n) => BuildStepOutput;\n\ninterface BuildStepOutputProviderParams<R extends boolean = boolean> {\n  id: string;\n  required: R;\n}\n\ninterface BuildStepOutputParams<R extends boolean = boolean>\n  extends BuildStepOutputProviderParams<R> {\n  stepDisplayName: string;\n}\n\ntype BuildStepOutputValueType<R extends boolean = boolean> = R extends true\n  ? string\n  : string | undefined;\n\nexport interface SerializedBuildStepOutput<R extends boolean = boolean> {\n  id: string;\n  stepDisplayName: string;\n  required: R;\n  value?: string;\n}\n\nexport class BuildStepOutput<R extends boolean = boolean> {\n  public readonly id: string;\n  public readonly stepDisplayName: string;\n  public readonly required: R;\n\n  private _value?: string;\n\n  public static createProvider(params: BuildStepOutputProviderParams): BuildStepOutputProvider {\n    return (ctx, stepDisplayName) => new BuildStepOutput(ctx, { ...params, stepDisplayName });\n  }\n\n  constructor(\n    // @ts-expect-error ctx is not used in this class but let's keep it here for consistency\n    private readonly ctx: BuildStepGlobalContext | undefined,\n    { id, stepDisplayName, required }: BuildStepOutputParams<R>\n  ) {\n    this.id = id;\n    this.stepDisplayName = stepDisplayName;\n    this.required = required;\n  }\n\n  public get rawValue(): string | undefined {\n    return this._value;\n  }\n\n  public get value(): BuildStepOutputValueType<R> {\n    if (this.required && this._value === undefined) {\n      throw new BuildStepRuntimeError(\n        `Output parameter \"${this.id}\" for step \"${this.stepDisplayName}\" is required but it was not set.`\n      );\n    }\n    return this._value as BuildStepOutputValueType<R>;\n  }\n\n  public set(value: BuildStepOutputValueType<R>): BuildStepOutput {\n    if (this.required && value === undefined) {\n      throw new BuildStepRuntimeError(\n        `Output parameter \"${this.id}\" for step \"${this.stepDisplayName}\" is required.`\n      );\n    }\n    this._value = value;\n    return this;\n  }\n\n  public serialize(): SerializedBuildStepOutput {\n    return {\n      id: this.id,\n      stepDisplayName: this.stepDisplayName,\n      required: this.required,\n      value: this._value,\n    };\n  }\n\n  public static deserialize(serialized: SerializedBuildStepOutput): BuildStepOutput {\n    const deserialized = new BuildStepOutput(undefined, {\n      id: serialized.id,\n      stepDisplayName: serialized.stepDisplayName,\n      required: serialized.required,\n    });\n    deserialized._value = serialized.value;\n    return deserialized;\n  }\n}\n\nexport function makeBuildStepOutputByIdMap(outputs?: BuildStepOutput[]): BuildStepOutputById {\n  if (outputs === undefined) {\n    return {};\n  }\n  return outputs.reduce((acc, output) => {\n    acc[output.id] = output;\n    return acc;\n  }, {} as BuildStepOutputById);\n}\n"]}