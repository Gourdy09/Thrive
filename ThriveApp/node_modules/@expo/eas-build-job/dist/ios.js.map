{"version":3,"file":"ios.js","sourceRoot":"","sources":["../src/ios.ts"],"names":[],"mappings":"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","sourcesContent":["import Joi from 'joi';\nimport { LoggerLevel } from '@expo/logger';\n\nimport {\n  ArchiveSource,\n  ArchiveSourceSchema,\n  Env,\n  EnvSchema,\n  Platform,\n  Workflow,\n  Cache,\n  CacheSchema,\n  EnvironmentSecretsSchema,\n  EnvironmentSecret,\n  BuildTrigger,\n  BuildMode,\n} from './common';\n\nexport type DistributionType = 'store' | 'internal' | 'simulator';\n\nconst TargetCredentialsSchema = Joi.object().keys({\n  provisioningProfileBase64: Joi.string().required(),\n  distributionCertificate: Joi.object({\n    dataBase64: Joi.string().required(),\n    password: Joi.string().allow('').required(),\n  }).required(),\n});\n\nexport interface TargetCredentials {\n  provisioningProfileBase64: string;\n  distributionCertificate: DistributionCertificate;\n}\n\nconst BuildCredentialsSchema = Joi.object().pattern(\n  Joi.string().required(),\n  TargetCredentialsSchema\n);\n\ntype Target = string;\nexport type BuildCredentials = Record<Target, TargetCredentials>;\n\nexport interface DistributionCertificate {\n  dataBase64: string;\n  password: string;\n}\nexport interface BuilderEnvironment {\n  image?: string;\n  node?: string;\n  yarn?: string;\n  bun?: string;\n  pnpm?: string;\n  bundler?: string;\n  fastlane?: string;\n  cocoapods?: string;\n  env?: Env;\n}\n\nconst BuilderEnvironmentSchema = Joi.object({\n  image: Joi.string(),\n  node: Joi.string(),\n  yarn: Joi.string(),\n  pnpm: Joi.string(),\n  bun: Joi.string(),\n  bundler: Joi.string(),\n  fastlane: Joi.string(),\n  cocoapods: Joi.string(),\n  env: EnvSchema,\n});\n\nexport interface BuildSecrets {\n  buildCredentials?: BuildCredentials;\n  environmentSecrets?: EnvironmentSecret[];\n  robotAccessToken?: string;\n}\n\nexport interface Job {\n  mode: BuildMode;\n  type: Workflow;\n  triggeredBy: BuildTrigger;\n  projectArchive: ArchiveSource;\n  resign?: {\n    applicationArchiveSource: ArchiveSource;\n  };\n  platform: Platform.IOS;\n  projectRootDirectory?: string;\n  buildProfile?: string;\n  updates?: {\n    channel?: string;\n  };\n  secrets?: BuildSecrets;\n  builderEnvironment?: BuilderEnvironment;\n  cache: Cache;\n  developmentClient?: boolean;\n  simulator?: boolean;\n  version?: {\n    buildNumber?: string;\n    /**\n     * support for this field is implemented, but specifying it is disabled on schema level\n     */\n    appVersion?: string;\n    /**\n     * support for this field is implemented, but specifying it is disabled on schema level\n     */\n    runtimeVersion?: string;\n  };\n  buildArtifactPaths?: string[];\n\n  scheme?: string;\n  buildConfiguration?: string;\n  applicationArchivePath?: string;\n\n  username?: string;\n\n  customBuildConfig?: {\n    path: string;\n  };\n\n  experimental?: {\n    prebuildCommand?: string;\n  };\n  expoBuildUrl?: string;\n  githubTriggerOptions?: {\n    autoSubmit: boolean;\n    submitProfile?: string;\n  };\n  loggerLevel?: LoggerLevel;\n}\n\nconst SecretsSchema = Joi.object({\n  buildCredentials: BuildCredentialsSchema,\n  environmentSecrets: EnvironmentSecretsSchema,\n  robotAccessToken: Joi.string(),\n});\n\nexport const JobSchema = Joi.object({\n  mode: Joi.string()\n    .valid(...Object.values(BuildMode))\n    .default(BuildMode.BUILD),\n  type: Joi.when('mode', {\n    is: Joi.string().valid(BuildMode.RESIGN),\n    then: Joi.string().valid(Workflow.UNKNOWN).default(Workflow.UNKNOWN),\n    otherwise: Joi.string()\n      .valid(...Object.values(Workflow))\n      .required(),\n  }),\n  triggeredBy: Joi.string()\n    .valid(...Object.values(BuildTrigger))\n    .default(BuildTrigger.EAS_CLI),\n  projectArchive: ArchiveSourceSchema.required(),\n  resign: Joi.when('mode', {\n    is: Joi.string().valid(BuildMode.RESIGN),\n    then: Joi.object({\n      applicationArchiveSource: ArchiveSourceSchema.required(),\n    }).required(),\n    otherwise: Joi.any().strip(),\n  }),\n  platform: Joi.string().valid(Platform.IOS).required(),\n  projectRootDirectory: Joi.when('mode', {\n    is: Joi.string().valid(BuildMode.RESIGN),\n    then: Joi.any().strip(),\n    otherwise: Joi.string().required(),\n  }),\n  buildProfile: Joi.when('mode', {\n    is: Joi.string().valid(BuildMode.BUILD),\n    then: Joi.when('triggeredBy', {\n      is: Joi.string().valid(BuildTrigger.GIT_BASED_INTEGRATION),\n      then: Joi.string().required(),\n      otherwise: Joi.string(),\n    }),\n    otherwise: Joi.string(),\n  }),\n  updates: Joi.object({\n    channel: Joi.string(),\n  }),\n  secrets: Joi.when('mode', {\n    is: Joi.string().valid(BuildMode.CUSTOM),\n    then: SecretsSchema,\n    otherwise: SecretsSchema.required(),\n  }),\n  builderEnvironment: BuilderEnvironmentSchema,\n  cache: CacheSchema.default(),\n  developmentClient: Joi.boolean(),\n  simulator: Joi.boolean(),\n  version: Joi.object({\n    buildNumber: Joi.string(),\n  }),\n  buildArtifactPaths: Joi.array().items(Joi.string()),\n\n  scheme: Joi.string(),\n  buildConfiguration: Joi.string(),\n  applicationArchivePath: Joi.string(),\n\n  username: Joi.string(),\n\n  customBuildConfig: Joi.when('mode', {\n    is: Joi.string().valid(BuildMode.CUSTOM),\n    then: Joi.object({\n      path: Joi.string(),\n    }).required(),\n    otherwise: Joi.any().strip(),\n  }),\n\n  experimental: Joi.object({\n    prebuildCommand: Joi.string(),\n  }),\n  expoBuildUrl: Joi.string().uri().optional(),\n  githubTriggerOptions: Joi.object({\n    autoSubmit: Joi.boolean().default(false),\n    submitProfile: Joi.string(),\n  }),\n  loggerLevel: Joi.string().valid(...Object.values(LoggerLevel)),\n});\n"]}