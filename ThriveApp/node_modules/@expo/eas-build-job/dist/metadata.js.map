{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../src/metadata.ts"],"names":[],"mappings":";;;;;;AAAA,8CAAsB;AAItB,IAAY,qBAIX;AAJD,WAAY,qBAAqB;IAC/B,oCAAa,CAAA;IACb,sCAAe,CAAA;IACf,oCAAa,CAAA;AACf,CAAC,EAJW,qBAAqB,qCAArB,qBAAqB,QAIhC;AAiLD,MAAM,uBAAuB,GAAG,aAAG,CAAC,MAAM,CAAoB;IAC5D,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE;SACf,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;SAC9C,QAAQ,EAAE;IACb,kBAAkB,EAAE,aAAG,CAAC,OAAO,EAAE;CAClC,CAAC;KACC,IAAI,CAAC,aAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,qBAAqB,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;IAC/D,IAAI,EAAE,aAAG,CAAC,MAAM,CAAC;QACf,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;QAC9D,SAAS,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KACnC,CAAC;CACH,CAAC;KACD,IAAI,CAAC,aAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,qBAAqB,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;IAChE,IAAI,EAAE,aAAG,CAAC,MAAM,CAAC;QACf,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;QAC/D,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KAC9B,CAAC;CACH,CAAC;KACD,IAAI,CAAC,aAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,qBAAqB,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;IAC/D,IAAI,EAAE,aAAG,CAAC,MAAM,CAAC;QACf,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;QAC9D,GAAG,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;KACnC,CAAC;CACH,CAAC,CAAC;AAEQ,QAAA,cAAc,GAAG,aAAG,CAAC,MAAM,CAAC;IACvC,eAAe,EAAE,aAAG,CAAC,MAAM,EAAE;SAC1B,OAAO,CAAC,aAAG,CAAC,MAAM,EAAE,EAAE,CAAC,aAAG,CAAC,MAAM,EAAE,EAAE,aAAG,CAAC,MAAM,EAAE,EAAE,aAAG,CAAC,OAAO,EAAE,CAAC,CAAC;SAClE,QAAQ,EAAE;IACb,UAAU,EAAE,aAAG,CAAC,MAAM,EAAE;IACxB,eAAe,EAAE,aAAG,CAAC,MAAM,EAAE;IAC7B,UAAU,EAAE,aAAG,CAAC,MAAM,EAAE;IACxB,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC;IAClD,YAAY,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC;IAClE,iBAAiB,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC;IACxD,UAAU,EAAE,aAAG,CAAC,MAAM,EAAE;IACxB,cAAc,EAAE,aAAG,CAAC,MAAM,EAAE;IAC5B,iBAAiB,EAAE,uBAAuB;IAC1C,kBAAkB,EAAE,aAAG,CAAC,MAAM,EAAE;IAChC,OAAO,EAAE,aAAG,CAAC,MAAM,EAAE;IACrB,OAAO,EAAE,aAAG,CAAC,MAAM,EAAE;IACrB,aAAa,EAAE,aAAG,CAAC,MAAM,EAAE;IAC3B,YAAY,EAAE,aAAG,CAAC,MAAM,EAAE;IAC1B,aAAa,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;IAC5C,gBAAgB,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;IACxC,qBAAqB,EAAE,aAAG,CAAC,OAAO,EAAE;IACpC,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE;IACtB,yBAAyB,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC;IACnE,OAAO,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;IAC/B,SAAS,EAAE,aAAG,CAAC,OAAO,EAAE;IACxB,iBAAiB,EAAE,aAAG,CAAC,OAAO,EAAE;IAChC,kBAAkB,EAAE,aAAG,CAAC,MAAM,EAAE;IAChC,iBAAiB,EAAE,aAAG,CAAC,OAAO,EAAE;IAChC,sBAAsB,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;IACxE,SAAS,EAAE,aAAG,CAAC,OAAO,EAAE;IACxB,aAAa,EAAE,aAAG,CAAC,MAAM,EAAE;IAC3B,iBAAiB,EAAE,aAAG,CAAC,MAAM,EAAE;IAC/B,WAAW,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,YAAY,EAAE,SAAS,EAAE,aAAa,CAAC;CACxE,CAAC,CAAC;AAEH,SAAgB,gBAAgB,CAAC,QAAgB;IAC/C,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,sBAAc,CAAC,QAAQ,CAAC,QAAQ,EAAE;QACzD,YAAY,EAAE,IAAI;QAClB,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,KAAK;KAClB,CAAC,CAAC;IACH,IAAI,KAAK,EAAE,CAAC;QACV,MAAM,KAAK,CAAC;IACd,CAAC;SAAM,CAAC;QACN,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC;AAXD,4CAWC","sourcesContent":["import Joi from 'joi';\n\nimport { Workflow } from './common';\n\nexport enum FingerprintSourceType {\n  'GCS' = 'GCS',\n  'PATH' = 'PATH',\n  'URL' = 'URL',\n}\n\nexport type FingerprintSource = { isDebugFingerprint?: boolean } & (\n  | { type: FingerprintSourceType.GCS; bucketKey: string }\n  | { type: FingerprintSourceType.PATH; path: string }\n  | { type: FingerprintSourceType.URL; url: string }\n);\n\nexport type Metadata = {\n  /**\n   * Tracking context\n   * It's used to track build process across different Expo services and tools.\n   */\n  trackingContext: Record<string, string | number | boolean>;\n\n  /**\n   * Application version:\n   * - managed projects: expo.version in app.json/app.config.js\n   * - generic projects:\n   *   * iOS: CFBundleShortVersionString in Info.plist\n   *   * Android: versionName in build.gradle\n   */\n  appVersion?: string;\n\n  /**\n   * Application build version:\n   * - Android: version code\n   * - iOS: build number\n   */\n  appBuildVersion?: string;\n\n  /**\n   * EAS CLI version\n   */\n  cliVersion?: string;\n\n  /**\n   * Build workflow\n   * It's either 'generic' or 'managed'\n   */\n  workflow?: Workflow;\n\n  /**\n   * Credentials source\n   * Credentials could be obtained either from credential.json or EAS servers.\n   */\n  credentialsSource?: 'local' | 'remote';\n\n  /**\n   * Expo SDK version\n   * It's determined by the expo package version in package.json.\n   * It's undefined if the expo package is not installed for the project.\n   */\n  sdkVersion?: string;\n\n  /**\n   * Runtime version (for Expo Updates)\n   */\n  runtimeVersion?: string;\n\n  /**\n   * The location of the fingerprint file if one exists\n   */\n  fingerprintSource?: FingerprintSource;\n\n  /**\n   * Version of the react-native package used in the project.\n   */\n  reactNativeVersion?: string;\n\n  /**\n   * Channel (for Expo Updates when it is configured for for use with EAS)\n   * It's undefined if the expo-updates package is not configured for use with EAS.\n   */\n  channel?: string;\n\n  /**\n   * Distribution type\n   * Indicates whether this is a build for store, internal distribution, or simulator (iOS).\n   * simulator is deprecated, use simulator flag instead\n   */\n  distribution?: 'store' | 'internal' | 'simulator';\n\n  /**\n   * App name (expo.name in app.json/app.config.js)\n   */\n  appName?: string;\n\n  /**\n   * App identifier:\n   * - iOS builds: the bundle identifier (expo.ios.bundleIdentifier in app.json/app.config.js)\n   * - Android builds: the application id (expo.android.package in app.json/app.config.js)\n   */\n  appIdentifier?: string;\n\n  /**\n   * Build profile name (e.g. release)\n   */\n  buildProfile?: string;\n\n  /**\n   * Git commit hash (e.g. aab03fbdabb6e536ea78b28df91575ad488f5f21)\n   */\n  gitCommitHash?: string;\n\n  /**\n   * Git commit message\n   */\n  gitCommitMessage?: string;\n\n  /**\n   * State of the git working tree\n   */\n  isGitWorkingTreeDirty?: boolean;\n\n  /**\n   * Username of the initiating user\n   */\n  username?: string;\n\n  /**\n   * Indicates what type of an enterprise provisioning profile was used to build the app.\n   * It's either adhoc or universal\n   */\n  iosEnterpriseProvisioning?: 'adhoc' | 'universal';\n\n  /**\n   * Message attached to the build.\n   */\n  message?: string;\n\n  /**\n   * Indicates whether the build was run from CI.\n   */\n  runFromCI?: boolean;\n\n  /**\n   * Indicates whether the build was run with --no-wait flag.\n   */\n  runWithNoWaitFlag?: boolean;\n\n  /**\n   * Workflow name available for custom builds.\n   */\n  customWorkflowName?: string;\n\n  /**\n   * Indicates whether this is (likely, we can't be 100% sure) development client build.\n   */\n  developmentClient?: boolean;\n\n  /**\n   * Which package manager will be used for the build. Determined based on lockfiles in the project directory.\n   */\n  requiredPackageManager?: 'npm' | 'pnpm' | 'yarn' | 'bun';\n\n  /**\n   * Indicates if this is an iOS build for a simulator\n   */\n  simulator?: boolean;\n\n  /**\n   * Image selected by user for the build. If user didn't select any image and wants to use default for the given RN and SDK version it will undefined.\n   */\n  selectedImage?: string;\n\n  /**\n   * Custom node version selected by user for the build. If user didn't select any node version and wants to use default it will be undefined.\n   */\n  customNodeVersion?: string;\n\n  /**\n   * EAS env vars environment chosen for the job\n   */\n  environment?: 'production' | 'preview' | 'development';\n};\n\nconst FingerprintSourceSchema = Joi.object<FingerprintSource>({\n  type: Joi.string()\n    .valid(...Object.values(FingerprintSourceType))\n    .required(),\n  isDebugFingerprint: Joi.boolean(),\n})\n  .when(Joi.object({ type: FingerprintSourceType.GCS }).unknown(), {\n    then: Joi.object({\n      type: Joi.string().valid(FingerprintSourceType.GCS).required(),\n      bucketKey: Joi.string().required(),\n    }),\n  })\n  .when(Joi.object({ type: FingerprintSourceType.PATH }).unknown(), {\n    then: Joi.object({\n      type: Joi.string().valid(FingerprintSourceType.PATH).required(),\n      path: Joi.string().required(),\n    }),\n  })\n  .when(Joi.object({ type: FingerprintSourceType.URL }).unknown(), {\n    then: Joi.object({\n      type: Joi.string().valid(FingerprintSourceType.URL).required(),\n      url: Joi.string().uri().required(),\n    }),\n  });\n\nexport const MetadataSchema = Joi.object({\n  trackingContext: Joi.object()\n    .pattern(Joi.string(), [Joi.string(), Joi.number(), Joi.boolean()])\n    .required(),\n  appVersion: Joi.string(),\n  appBuildVersion: Joi.string(),\n  cliVersion: Joi.string(),\n  workflow: Joi.string().valid('generic', 'managed'),\n  distribution: Joi.string().valid('store', 'internal', 'simulator'),\n  credentialsSource: Joi.string().valid('local', 'remote'),\n  sdkVersion: Joi.string(),\n  runtimeVersion: Joi.string(),\n  fingerprintSource: FingerprintSourceSchema,\n  reactNativeVersion: Joi.string(),\n  channel: Joi.string(),\n  appName: Joi.string(),\n  appIdentifier: Joi.string(),\n  buildProfile: Joi.string(),\n  gitCommitHash: Joi.string().length(40).hex(),\n  gitCommitMessage: Joi.string().max(4096),\n  isGitWorkingTreeDirty: Joi.boolean(),\n  username: Joi.string(),\n  iosEnterpriseProvisioning: Joi.string().valid('adhoc', 'universal'),\n  message: Joi.string().max(1024),\n  runFromCI: Joi.boolean(),\n  runWithNoWaitFlag: Joi.boolean(),\n  customWorkflowName: Joi.string(),\n  developmentClient: Joi.boolean(),\n  requiredPackageManager: Joi.string().valid('npm', 'pnpm', 'yarn', 'bun'),\n  simulator: Joi.boolean(),\n  selectedImage: Joi.string(),\n  customNodeVersion: Joi.string(),\n  environment: Joi.string().valid('production', 'preview', 'development'),\n});\n\nexport function sanitizeMetadata(metadata: object): Metadata {\n  const { value, error } = MetadataSchema.validate(metadata, {\n    stripUnknown: true,\n    convert: true,\n    abortEarly: false,\n  });\n  if (error) {\n    throw error;\n  } else {\n    return value;\n  }\n}\n"]}