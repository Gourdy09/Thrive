{"version":3,"file":"errors.js","sourceRoot":"","sources":["../src/errors.ts"],"names":[],"mappings":";;;AAAA,iCAA2D;AAE3D,IAAY,SAQX;AARD,WAAY,SAAS;IACnB,4CAA+B,CAAA;IAC/B,sEAAyD,CAAA;IACzD,0CAA6B,CAAA;IAC7B,wEAA2D,CAAA;IAC3D,sFAAyE,CAAA;IACzE,oEAAuD,CAAA;IACvD,4DAA+C,CAAA;AACjD,CAAC,EARW,SAAS,yBAAT,SAAS,QAQpB;AAkBD,MAAa,UAAW,SAAQ,KAAK;IAQnC,YAAY,OAAe,EAAE,OAA0B;QACrD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,CAAC;QACvD,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IACvC,CAAC;IACM,MAAM;QACX,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,mBAAmB;YACnC,OAAO,EAAE,IAAI,CAAC,iBAAiB;YAC/B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC;IACJ,CAAC;CACF;AAzBD,gCAyBC;AAED,MAAa,eAAgB,SAAQ,KAAK;IACxC,YACS,SAAiB,EACjB,OAAe,EACf,OAAgB;QAEvB,KAAK,CAAC,OAAO,CAAC,CAAC;QAJR,cAAS,GAAT,SAAS,CAAQ;QACjB,YAAO,GAAP,OAAO,CAAQ;QACf,YAAO,GAAP,OAAO,CAAS;IAGzB,CAAC;CACF;AARD,0CAQC;AAED,MAAa,YAAa,SAAQ,eAAe;IAC/C,YAAY,UAAuB;QACjC,KAAK,CACH,SAAS,CAAC,aAAa,EACvB,UAAU;YACR,CAAC,CAAC,kCAAkC,4BAAqB,CAAC,UAAU,CAAC,oCAAoC;YACzG,CAAC,CAAC,+CAA+C,CACpD,CAAC;IACJ,CAAC;CACF;AATD,oCASC;AAED,MAAa,iBAAkB,SAAQ,UAAU;IAC/C;QACE,MAAM,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC;QAC1C,MAAM,OAAO,GAAG,+CAA+C,CAAC;QAChE,KAAK,CAAC,OAAO,EAAE;YACb,SAAS;YACT,iBAAiB,EAAE,OAAO;YAC1B,mBAAmB,EAAE,SAAS;SAC/B,CAAC,CAAC;IACL,CAAC;CACF;AAVD,8CAUC;AAED,MAAa,uBAAwB,SAAQ,UAAU;IACrD;QACE,MAAM,SAAS,GAAG,SAAS,CAAC,0BAA0B,CAAC;QACvD,MAAM,OAAO,GAAG,4DAA4D,CAAC;QAC7E,KAAK,CAAC,OAAO,EAAE;YACb,SAAS;YACT,iBAAiB,EAAE,OAAO;YAC1B,mBAAmB,EAAE,SAAS;SAC/B,CAAC,CAAC;IACL,CAAC;CACF;AAVD,0DAUC;AAED,MAAa,gCAAiC,SAAQ,eAAe;IACnE,YAAY,OAAe;QACzB,KAAK,CAAC,0CAA0C,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;CACF;AAJD,4EAIC","sourcesContent":["import { BuildPhase, buildPhaseDisplayName } from './logs';\n\nexport enum ErrorCode {\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n  UNKNOWN_CUSTOM_BUILD_ERROR = 'UNKNOWN_CUSTOM_BUILD_ERROR',\n  SERVER_ERROR = 'SERVER_ERROR',\n  UNKNOWN_FASTLANE_ERROR = 'EAS_BUILD_UNKNOWN_FASTLANE_ERROR',\n  UNKNOWN_FASTLANE_RESIGN_ERROR = 'EAS_BUILD_UNKNOWN_FASTLANE_RESIGN_ERROR',\n  UNKNOWN_GRADLE_ERROR = 'EAS_BUILD_UNKNOWN_GRADLE_ERROR',\n  BUILD_TIMEOUT_ERROR = 'EAS_BUILD_TIMEOUT_ERROR',\n}\n\nexport interface ExternalBuildError {\n  errorCode: string;\n  message: string;\n  docsUrl?: string;\n  buildPhase?: BuildPhase;\n}\n\ninterface BuildErrorDetails {\n  errorCode: string;\n  userFacingMessage: string;\n  userFacingErrorCode: string;\n  docsUrl?: string;\n  innerError?: Error;\n  buildPhase?: BuildPhase;\n}\n\nexport class BuildError extends Error {\n  public errorCode: string;\n  public userFacingMessage: string;\n  public userFacingErrorCode: string;\n  public docsUrl?: string;\n  public innerError?: Error;\n  public buildPhase?: BuildPhase;\n\n  constructor(message: string, details: BuildErrorDetails) {\n    super(message);\n    this.errorCode = details.errorCode;\n    this.userFacingErrorCode = details.userFacingErrorCode;\n    this.userFacingMessage = details.userFacingMessage;\n    this.docsUrl = details.docsUrl;\n    this.innerError = details.innerError;\n    this.buildPhase = details.buildPhase;\n  }\n  public format(): ExternalBuildError {\n    return {\n      errorCode: this.userFacingErrorCode,\n      message: this.userFacingMessage,\n      docsUrl: this.docsUrl,\n      buildPhase: this.buildPhase,\n    };\n  }\n}\n\nexport class UserFacingError extends Error {\n  constructor(\n    public errorCode: string,\n    public message: string,\n    public docsUrl?: string\n  ) {\n    super(message);\n  }\n}\n\nexport class UnknownError extends UserFacingError {\n  constructor(buildPhase?: BuildPhase) {\n    super(\n      ErrorCode.UNKNOWN_ERROR,\n      buildPhase\n        ? `Unknown error. See logs of the ${buildPhaseDisplayName[buildPhase]} build phase for more information.`\n        : 'Unknown error. See logs for more information.'\n    );\n  }\n}\n\nexport class UnknownBuildError extends BuildError {\n  constructor() {\n    const errorCode = ErrorCode.UNKNOWN_ERROR;\n    const message = 'Unknown error. See logs for more information.';\n    super(message, {\n      errorCode,\n      userFacingMessage: message,\n      userFacingErrorCode: errorCode,\n    });\n  }\n}\n\nexport class UnknownCustomBuildError extends BuildError {\n  constructor() {\n    const errorCode = ErrorCode.UNKNOWN_CUSTOM_BUILD_ERROR;\n    const message = 'Unknown custom build error. See logs for more information.';\n    super(message, {\n      errorCode,\n      userFacingMessage: message,\n      userFacingErrorCode: errorCode,\n    });\n  }\n}\n\nexport class CredentialsDistCertMismatchError extends UserFacingError {\n  constructor(message: string) {\n    super('EAS_BUILD_CREDENTIALS_DIST_CERT_MISMATCH', message);\n  }\n}\n"]}