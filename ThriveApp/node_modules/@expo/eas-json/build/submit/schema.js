"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnresolvedSubmitProfileSchema = exports.ResolvedIosSubmitProfileSchema = exports.UnresolvedIosSubmitProfileSchema = exports.AndroidSubmitProfileSchema = void 0;
const tslib_1 = require("tslib");
const joi_1 = tslib_1.__importDefault(require("joi"));
const types_1 = require("./types");
exports.AndroidSubmitProfileSchema = joi_1.default.object({
    serviceAccountKeyPath: joi_1.default.string(),
    track: joi_1.default.string()
        .valid(...Object.values(types_1.AndroidReleaseTrack))
        .default(types_1.AndroidReleaseTrack.internal),
    releaseStatus: joi_1.default.string()
        .valid(...Object.values(types_1.AndroidReleaseStatus))
        .default(types_1.AndroidReleaseStatus.completed),
    changesNotSentForReview: joi_1.default.boolean().default(false),
    applicationId: joi_1.default.string(),
    rollout: joi_1.default.number().min(0).max(1).when('releaseStatus', {
        is: types_1.AndroidReleaseStatus.inProgress,
        then: joi_1.default.required(),
        otherwise: joi_1.default.forbidden(),
    }),
});
// it is less strict submission schema allowing for magic syntax like "$ASC_API_KEY_PATH"
// to read value from environment variable later on
exports.UnresolvedIosSubmitProfileSchema = joi_1.default.object({
    ascApiKeyPath: joi_1.default.string(),
    ascApiKeyId: joi_1.default.string(),
    ascApiKeyIssuerId: joi_1.default.string(),
    appleId: joi_1.default.string(),
    ascAppId: joi_1.default.string(),
    appleTeamId: joi_1.default.string(),
    sku: joi_1.default.string(),
    language: joi_1.default.string().default('en-US'),
    companyName: joi_1.default.string(),
    appName: joi_1.default.string(),
    bundleIdentifier: joi_1.default.string(),
    metadataPath: joi_1.default.string(),
});
// more strict version after resolving all of the values
exports.ResolvedIosSubmitProfileSchema = joi_1.default.object({
    ascApiKeyPath: joi_1.default.string(),
    ascApiKeyId: joi_1.default.string()
        .regex(/^[\dA-Z]+$/)
        .message('Invalid Apple App Store Connect API Key ID ("ascApiKeyId") was specified. It should consist of uppercase letters or digits. Example: "AB32CZE81F". Learn more: https://expo.fyi/creating-asc-api-key.')
        .max(30), // I didn't find any docs about it, but all of the ones I've seen are 10 characters long so 30 characters limit should be enough
    ascApiKeyIssuerId: joi_1.default.string()
        .uuid() // All of the issuer IDs I've seen are UUIDs, but again, I didn't find any docs about it
        .message('Invalid Apple App Store Connect API Key Issuer ID ("ascApiKeyIssuerId") was specified. It should be a valid UUID. Example: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx". Learn more: https://expo.fyi/creating-asc-api-key.'),
    appleId: joi_1.default.string()
        .email()
        .message('Invalid Apple ID was specified. It should be a valid email address. Example: "name@example.com".'),
    ascAppId: joi_1.default.string()
        .regex(/^\d+$/)
        .message('Invalid Apple App Store Connect App ID ("ascAppId") was specified. It should consist only of digits. Example: "1234567891". Learn more: https://expo.fyi/asc-app-id.')
        .max(30), // I didn't find any docs about it, but the longest app ID I've seen is 10 digits long so 30 characters limit should be enough
    appleTeamId: joi_1.default.string()
        .regex(/^[\dA-Z]{10}$/) // Apple says that it always has to be 10 characters long https://developer.apple.com/help/account/manage-your-team/locate-your-team-id/
        .message('Invalid Apple Team ID was specified. It should consist of 10 uppercase letters or digits. Example: "AB32CZE81F".'),
    sku: joi_1.default.string(),
    language: joi_1.default.string().default('en-US'),
    companyName: joi_1.default.string(),
    appName: joi_1.default.string(),
    bundleIdentifier: joi_1.default.string(),
    metadataPath: joi_1.default.string(),
});
exports.UnresolvedSubmitProfileSchema = joi_1.default.object({
    extends: joi_1.default.string(),
    android: exports.AndroidSubmitProfileSchema,
    ios: exports.UnresolvedIosSubmitProfileSchema,
});
