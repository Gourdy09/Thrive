import EasCommand from '../../commandUtils/EasCommand';
import { ExpoGraphqlClient } from '../../commandUtils/context/contextUtils/createGraphqlClient';
import { PaginatedQueryOptions } from '../../commandUtils/pagination';
import { AppleDeviceQueryResult } from '../../credentials/ios/api/graphql/queries/AppleDeviceQuery';
import { AppleDevice, Maybe } from '../../graphql/generated';
export default class DeviceDelete extends EasCommand {
    static description: string;
    static flags: {
        json: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'non-interactive': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'apple-team-id': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        udid: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
    };
    static contextDefinition: {
        loggedIn: import("../../commandUtils/context/LoggedInContextField").default;
        privateProjectConfig: import("../../commandUtils/context/PrivateProjectConfigContextField").PrivateProjectConfigContextField;
    };
    runAsync(): Promise<void>;
    shouldDisableDeviceOnAppleAsync({ nonInteractive, }: PaginatedQueryOptions): Promise<boolean>;
    disableDeviceOnAppleAsync(device: AppleDevice | AppleDeviceQueryResult, appleTeamIdentifier: string): Promise<void>;
    shouldRemoveDeviceFromExpoAsync({ nonInteractive, }: PaginatedQueryOptions): Promise<boolean>;
    removeDeviceFromExpoAsync(graphqlClient: ExpoGraphqlClient, chosenDevice: AppleDevice | AppleDeviceQueryResult): Promise<void>;
    logChosenDevice(device: AppleDevice | AppleDeviceQueryResult, appleTeamName: Maybe<string> | undefined, appleTeamIdentifier: string, { json }: PaginatedQueryOptions): void;
}
