import { ExpoGraphqlClient } from '../commandUtils/context/contextUtils/createGraphqlClient';
import { AppPrivacy } from '../graphql/generated';
import { Actor } from '../user/User';
/**
 * 1. Looks for an existing project on EAS servers. If found, ask the user whether this is the
 *    project they would like to link. If yes, return that. If not, throw.
 * 2. If no existing project is found, ask the user whether they would like to register a new one.
 *    If yes, register and return that. If not, throw.
 */
export declare function fetchOrCreateProjectIDForWriteToConfigWithConfirmationAsync(graphqlClient: ExpoGraphqlClient, projectInfo: {
    accountName: string;
    projectName: string;
    privacy?: AppPrivacy;
}, options: {
    nonInteractive: boolean;
}, actor: Actor): Promise<string>;
/**
 * Finds project by `@accountName/slug` and returns its ID, return null if the project does not exist.
 * @param accountName account name
 * @param slug project slug
 * @returns A promise resolving to Project ID, null if it doesn't exist
 */
export declare function findProjectIdByAccountNameAndSlugNullableAsync(graphqlClient: ExpoGraphqlClient, accountName: string, slug: string): Promise<string | null>;
