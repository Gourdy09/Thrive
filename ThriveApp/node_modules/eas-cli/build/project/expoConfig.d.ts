import { ExpoConfig, modifyConfigAsync } from '@expo/config';
import { Env } from '@expo/eas-build-job';
export type PublicExpoConfig = Omit<ExpoConfig, '_internal' | 'hooks' | 'ios' | 'android' | 'updates'> & {
    ios?: Omit<ExpoConfig['ios'], 'config'>;
    android?: Omit<ExpoConfig['android'], 'config'>;
    updates?: Omit<ExpoConfig['updates'], 'codeSigningCertificate' | 'codeSigningMetadata'>;
};
export interface ExpoConfigOptions {
    env?: Env;
    skipSDKVersionRequirement?: boolean;
    skipPlugins?: boolean;
}
export declare function createOrModifyExpoConfigAsync(projectDir: string, exp: Partial<ExpoConfig>, readOptions?: {
    skipSDKVersionRequirement?: boolean;
}): ReturnType<typeof modifyConfigAsync>;
export declare function getPrivateExpoConfig(projectDir: string, opts?: ExpoConfigOptions): ExpoConfig;
export declare function ensureExpoConfigExists(projectDir: string): void;
export declare function isUsingStaticExpoConfig(projectDir: string): boolean;
export declare function getPublicExpoConfig(projectDir: string, opts?: ExpoConfigOptions): PublicExpoConfig;
