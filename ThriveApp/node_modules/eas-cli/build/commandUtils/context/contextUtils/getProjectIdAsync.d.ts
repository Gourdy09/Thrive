import { ExpoConfig } from '@expo/config-types';
import { Env } from '@expo/eas-build-job';
import { ExpoGraphqlClient } from './createGraphqlClient';
import SessionManager from '../../../user/SessionManager';
import { Actor } from '../../../user/User';
/**
 * Save an EAS project ID to the appropriate field in the app config.
 *
 * @deprecated Should not be used outside of context functions except in the init command.
 * @deprecated Starting from `@expo/config` from SDK 52, the `modifyConfigAsync` function is merging existing data. Once this is released, we can use that instead of manually merging.
 */
export declare function saveProjectIdToAppConfigAsync(projectDir: string, projectId: string, options?: {
    env?: Env;
}): Promise<void>;
/**
 * Get the EAS project ID from the app config. If the project ID is not set in the config,
 * use the owner/slug to identify an EAS project on the server (asking for confirmation first),
 * and attempt to save the EAS project ID to the appropriate field in the app config. If unable to
 * save to the app config, throw an error.
 *
 * @returns the EAS project ID
 *
 * @deprecated Should not be used outside of context functions.
 */
export declare function getProjectIdAsync(sessionManager: SessionManager, exp: ExpoConfig, options: {
    env?: Env;
    nonInteractive: boolean;
}): Promise<string>;
export declare function validateOrSetProjectIdAsync({ exp, graphqlClient, actor, options, cwd, }: {
    exp: ExpoConfig;
    graphqlClient: ExpoGraphqlClient;
    actor: Actor;
    options: {
        env?: Env;
        nonInteractive: boolean;
    };
    cwd?: string;
}): Promise<string>;
