import { ExpoGraphqlClient } from './context/contextUtils/createGraphqlClient';
import { Build, BuildFragment, BuildStatus } from '../graphql/generated';
import { RequestedPlatform } from '../platform';
export declare function ensureBuildExistsAsync(graphqlClient: ExpoGraphqlClient, buildId: string): Promise<void>;
export declare function fetchBuildsAsync({ graphqlClient, projectId, filters, }: {
    graphqlClient: ExpoGraphqlClient;
    projectId: string;
    filters?: {
        statuses?: BuildStatus[];
        platform?: RequestedPlatform;
        profile?: string;
    };
}): Promise<BuildFragment[]>;
export declare function formatBuild(build: Pick<Build, 'id' | 'platform' | 'status' | 'createdAt'>): string;
