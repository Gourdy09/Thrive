import { Client } from '../../vcs/vcs';
export declare function maybeBailOnRepoStatusAsync(vcsClient: Client, nonInteractive: boolean): Promise<void>;
export declare function ensureRepoIsCleanAsync(vcsClient: Client, nonInteractive?: boolean): Promise<void>;
export declare function commitPromptAsync(vcsClient: Client, { initialCommitMessage, commitAllFiles, }?: {
    initialCommitMessage?: string;
    commitAllFiles?: boolean;
}): Promise<void>;
export type LocalFile = {
    path: string;
    size: number;
};
export declare function makeProjectMetadataFileAsync(archivePath: string): Promise<LocalFile>;
export declare function makeProjectTarballAsync(vcsClient: Client): Promise<LocalFile>;
export declare function reviewAndCommitChangesAsync(vcsClient: Client, initialCommitMessage: string, { nonInteractive, askedFirstTime }: {
    nonInteractive: boolean;
    askedFirstTime?: boolean;
}): Promise<void>;
