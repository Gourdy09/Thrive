import { ExpoConfig } from '@expo/config';
import { Platform } from '@expo/eas-build-job';
import { BuildProfile } from '@expo/eas-json';
import { ExpoGraphqlClient } from '../../commandUtils/context/contextUtils/createGraphqlClient';
import { Client } from '../../vcs/vcs';
export declare enum BumpStrategy {
    APP_VERSION = 0,
    VERSION_CODE = 1,
    NOOP = 2
}
export declare function bumpVersionAsync({ bumpStrategy, projectDir, exp, }: {
    projectDir: string;
    exp: ExpoConfig;
    bumpStrategy: BumpStrategy;
}): Promise<void>;
export declare function bumpVersionInAppJsonAsync({ bumpStrategy, projectDir, exp, }: {
    bumpStrategy: BumpStrategy;
    projectDir: string;
    exp: ExpoConfig;
}): Promise<void>;
export declare function maybeResolveVersionsAsync(projectDir: string, exp: ExpoConfig, buildProfile: BuildProfile<Platform.ANDROID>, vcsClient: Client): Promise<{
    appVersion?: string;
    appBuildVersion?: string;
}>;
export declare function updateNativeVersionsAsync({ projectDir, version, versionCode, }: {
    projectDir: string;
    version?: string;
    versionCode?: number;
}): Promise<void>;
/**
 * Returns buildNumber that will be used for the next build. If current build profile
 * has an 'autoIncrement' option set, it increments the version on server.
 */
export declare function resolveRemoteVersionCodeAsync(graphqlClient: ExpoGraphqlClient, { projectDir, projectId, exp, applicationId, buildProfile, vcsClient, }: {
    projectDir: string;
    projectId: string;
    exp: ExpoConfig;
    applicationId: string;
    buildProfile: BuildProfile<Platform.ANDROID>;
    vcsClient: Client;
}): Promise<string>;
