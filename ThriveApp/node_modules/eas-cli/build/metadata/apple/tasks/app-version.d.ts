/// <reference types="@expo/apple-utils/ts-declarations/expo__app-store" />
import { AppStoreVersion, AppStoreVersionLocalization, AppStoreVersionPhasedRelease, Platform } from '@expo/apple-utils';
import { AppleTask, TaskDownloadOptions, TaskPrepareOptions, TaskUploadOptions } from '../task';
export type AppVersionOptions = {
    /** If we should use the live version of the app (if available - defaults to false) */
    editLive: boolean;
    /** The platform to use (defaults to IOS) */
    platform: Platform;
    /** A version to create or select, if defined in the store configuration */
    version: string | null;
};
export type AppVersionData = {
    /** The current selected app store version to update */
    version: AppStoreVersion;
    /** If the current selected version is a live version, where not all properties are editable */
    versionIsLive: boolean;
    /** If the current selected version is the first version to be created */
    versionIsFirst: boolean;
    /** All version locales that should be, or are enabled */
    versionLocales: AppStoreVersionLocalization[];
    /** The (existing) phased release configuration, when set */
    versionPhasedRelease: AppStoreVersionPhasedRelease | null;
};
export declare class AppVersionTask extends AppleTask {
    private readonly options;
    constructor(options?: Partial<AppVersionOptions>);
    name: () => string;
    prepareAsync({ context }: TaskPrepareOptions): Promise<void>;
    downloadAsync({ config, context }: TaskDownloadOptions): Promise<void>;
    uploadAsync({ config, context }: TaskUploadOptions): Promise<void>;
}
