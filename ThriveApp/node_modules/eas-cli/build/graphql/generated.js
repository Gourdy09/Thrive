"use strict";
/**
 * This file was generated using GraphQL Codegen
 * Command: yarn generate-graphql-code
 * Run this during development for automatic type generation when editing GraphQL documents
 * For more info and docs, visit https://graphql-code-generator.com/
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GitHubAppEnvironment = exports.FingerprintSourceType = exports.Feature = exports.Experiment = exports.EnvironmentVariableVisibility = exports.EnvironmentVariableScope = exports.EnvironmentVariableEnvironment = exports.EnvironmentSecretType = exports.EntityTypeName = exports.EasTotalPlanEnablementUnit = exports.EasServiceMetric = exports.EasService = exports.EasBuildWaiverType = exports.EasBuildDeprecationInfoType = exports.EasBuildBillingResourceClass = exports.DistributionType = exports.CustomDomainStatus = exports.CustomDomainDnsRecordType = exports.CrashSampleFor = exports.ContinentCode = exports.BuildWorkflow = exports.BuildTrigger = exports.BuildStatus = exports.BuildRetryDisabledReason = exports.BuildResourceClass = exports.BuildPriority = exports.BuildPhase = exports.BuildMode = exports.BuildLimitThresholdExceededMetadataType = exports.BuildIosEnterpriseProvisioning = exports.BuildCredentialsSource = exports.BackgroundJobState = exports.BackgroundJobResultType = exports.AuthProviderIdentifier = exports.AuthProtocolType = exports.AuditLogsExportFormat = exports.AssetMetadataStatus = exports.AppsFilter = exports.AppleTeamType = exports.AppleDeviceClass = exports.AppStoreConnectUserRole = exports.AppSort = exports.AppPrivacy = exports.AppPlatform = exports.AppInternalDistributionBuildPrivacy = exports.AndroidKeystoreType = exports.AndroidFcmVersion = exports.AndroidBuildType = exports.ActivityTimelineProjectActivityType = exports.AccountAppsSortByField = void 0;
exports.UserEntityTypeName = exports.UserAgentOs = exports.UserAgentBrowser = exports.UsageMetricsGranularity = exports.UsageMetricType = exports.UploadSessionType = exports.TargetEntityMutationType = exports.SubmissionStatus = exports.SubmissionPriority = exports.SubmissionArchiveSourceType = exports.SubmissionAndroidTrack = exports.SubmissionAndroidReleaseStatus = exports.SubmissionAndroidArchiveType = exports.StatuspageServiceStatus = exports.StatuspageServiceName = exports.StatuspageIncidentStatus = exports.StatuspageIncidentImpact = exports.StandardOffer = exports.SecondFactorMethod = exports.Role = exports.ResponseType = exports.ResponseStatusType = exports.ResponseCacheStatus = exports.ResourceClassExperiment = exports.RequestMethod = exports.ProjectArchiveSourceType = exports.Permission = exports.Order = exports.OnboardingEnvironment = exports.OnboardingDeviceType = exports.OfferType = exports.NotificationType = exports.NotificationEvent = exports.MailchimpTag = exports.MailchimpAudience = exports.JobRunStatus = exports.JobRunPriority = exports.IosSchemeBuildConfiguration = exports.IosManagedBuildType = exports.IosDistributionType = exports.IosBuildType = exports.InvoiceDiscountType = exports.InsightsFilterType = exports.GitHubJobRunTriggerType = exports.GitHubJobRunTriggerRunStatus = exports.GitHubJobRunJobType = exports.GitHubBuildTriggerType = exports.GitHubBuildTriggerRunStatus = exports.GitHubBuildTriggerExecutionBehavior = exports.GitHubAppInstallationStatus = void 0;
exports.WorkerLoggerLevel = exports.WorkerDeploymentLogLevel = exports.WebhookType = void 0;
var AccountAppsSortByField;
(function (AccountAppsSortByField) {
    AccountAppsSortByField["LatestActivityTime"] = "LATEST_ACTIVITY_TIME";
    /**
     * Name prefers the display name but falls back to full_name with @account/
     * part stripped.
     */
    AccountAppsSortByField["Name"] = "NAME";
})(AccountAppsSortByField || (exports.AccountAppsSortByField = AccountAppsSortByField = {}));
var ActivityTimelineProjectActivityType;
(function (ActivityTimelineProjectActivityType) {
    ActivityTimelineProjectActivityType["Build"] = "BUILD";
    ActivityTimelineProjectActivityType["Submission"] = "SUBMISSION";
    ActivityTimelineProjectActivityType["Update"] = "UPDATE";
})(ActivityTimelineProjectActivityType || (exports.ActivityTimelineProjectActivityType = ActivityTimelineProjectActivityType = {}));
var AndroidBuildType;
(function (AndroidBuildType) {
    AndroidBuildType["Apk"] = "APK";
    AndroidBuildType["AppBundle"] = "APP_BUNDLE";
    /** @deprecated Use developmentClient option instead. */
    AndroidBuildType["DevelopmentClient"] = "DEVELOPMENT_CLIENT";
})(AndroidBuildType || (exports.AndroidBuildType = AndroidBuildType = {}));
var AndroidFcmVersion;
(function (AndroidFcmVersion) {
    AndroidFcmVersion["Legacy"] = "LEGACY";
    AndroidFcmVersion["V1"] = "V1";
})(AndroidFcmVersion || (exports.AndroidFcmVersion = AndroidFcmVersion = {}));
var AndroidKeystoreType;
(function (AndroidKeystoreType) {
    AndroidKeystoreType["Jks"] = "JKS";
    AndroidKeystoreType["Pkcs12"] = "PKCS12";
    AndroidKeystoreType["Unknown"] = "UNKNOWN";
})(AndroidKeystoreType || (exports.AndroidKeystoreType = AndroidKeystoreType = {}));
var AppInternalDistributionBuildPrivacy;
(function (AppInternalDistributionBuildPrivacy) {
    AppInternalDistributionBuildPrivacy["Private"] = "PRIVATE";
    AppInternalDistributionBuildPrivacy["Public"] = "PUBLIC";
})(AppInternalDistributionBuildPrivacy || (exports.AppInternalDistributionBuildPrivacy = AppInternalDistributionBuildPrivacy = {}));
var AppPlatform;
(function (AppPlatform) {
    AppPlatform["Android"] = "ANDROID";
    AppPlatform["Ios"] = "IOS";
})(AppPlatform || (exports.AppPlatform = AppPlatform = {}));
var AppPrivacy;
(function (AppPrivacy) {
    AppPrivacy["Hidden"] = "HIDDEN";
    AppPrivacy["Public"] = "PUBLIC";
    AppPrivacy["Unlisted"] = "UNLISTED";
})(AppPrivacy || (exports.AppPrivacy = AppPrivacy = {}));
var AppSort;
(function (AppSort) {
    /** Sort by recently published */
    AppSort["RecentlyPublished"] = "RECENTLY_PUBLISHED";
    /** Sort by highest trendScore */
    AppSort["Viewed"] = "VIEWED";
})(AppSort || (exports.AppSort = AppSort = {}));
var AppStoreConnectUserRole;
(function (AppStoreConnectUserRole) {
    AppStoreConnectUserRole["AccessToReports"] = "ACCESS_TO_REPORTS";
    AppStoreConnectUserRole["AccountHolder"] = "ACCOUNT_HOLDER";
    AppStoreConnectUserRole["Admin"] = "ADMIN";
    AppStoreConnectUserRole["AppManager"] = "APP_MANAGER";
    AppStoreConnectUserRole["CloudManagedAppDistribution"] = "CLOUD_MANAGED_APP_DISTRIBUTION";
    AppStoreConnectUserRole["CloudManagedDeveloperId"] = "CLOUD_MANAGED_DEVELOPER_ID";
    AppStoreConnectUserRole["CreateApps"] = "CREATE_APPS";
    AppStoreConnectUserRole["CustomerSupport"] = "CUSTOMER_SUPPORT";
    AppStoreConnectUserRole["Developer"] = "DEVELOPER";
    AppStoreConnectUserRole["Finance"] = "FINANCE";
    AppStoreConnectUserRole["ImageManager"] = "IMAGE_MANAGER";
    AppStoreConnectUserRole["Marketing"] = "MARKETING";
    AppStoreConnectUserRole["ReadOnly"] = "READ_ONLY";
    AppStoreConnectUserRole["Sales"] = "SALES";
    AppStoreConnectUserRole["Technical"] = "TECHNICAL";
    AppStoreConnectUserRole["Unknown"] = "UNKNOWN";
})(AppStoreConnectUserRole || (exports.AppStoreConnectUserRole = AppStoreConnectUserRole = {}));
var AppleDeviceClass;
(function (AppleDeviceClass) {
    AppleDeviceClass["Ipad"] = "IPAD";
    AppleDeviceClass["Iphone"] = "IPHONE";
    AppleDeviceClass["Mac"] = "MAC";
    AppleDeviceClass["Unknown"] = "UNKNOWN";
})(AppleDeviceClass || (exports.AppleDeviceClass = AppleDeviceClass = {}));
var AppleTeamType;
(function (AppleTeamType) {
    AppleTeamType["CompanyOrOrganization"] = "COMPANY_OR_ORGANIZATION";
    AppleTeamType["Individual"] = "INDIVIDUAL";
    AppleTeamType["InHouse"] = "IN_HOUSE";
})(AppleTeamType || (exports.AppleTeamType = AppleTeamType = {}));
var AppsFilter;
(function (AppsFilter) {
    /** Featured Projects */
    AppsFilter["Featured"] = "FEATURED";
    /** New Projects */
    AppsFilter["New"] = "NEW";
})(AppsFilter || (exports.AppsFilter = AppsFilter = {}));
var AssetMetadataStatus;
(function (AssetMetadataStatus) {
    AssetMetadataStatus["DoesNotExist"] = "DOES_NOT_EXIST";
    AssetMetadataStatus["Exists"] = "EXISTS";
})(AssetMetadataStatus || (exports.AssetMetadataStatus = AssetMetadataStatus = {}));
var AuditLogsExportFormat;
(function (AuditLogsExportFormat) {
    AuditLogsExportFormat["Csv"] = "CSV";
    AuditLogsExportFormat["Json"] = "JSON";
    AuditLogsExportFormat["Jsonl"] = "JSONL";
})(AuditLogsExportFormat || (exports.AuditLogsExportFormat = AuditLogsExportFormat = {}));
var AuthProtocolType;
(function (AuthProtocolType) {
    AuthProtocolType["Oidc"] = "OIDC";
})(AuthProtocolType || (exports.AuthProtocolType = AuthProtocolType = {}));
var AuthProviderIdentifier;
(function (AuthProviderIdentifier) {
    AuthProviderIdentifier["GoogleWs"] = "GOOGLE_WS";
    AuthProviderIdentifier["MsEntraId"] = "MS_ENTRA_ID";
    AuthProviderIdentifier["Okta"] = "OKTA";
    AuthProviderIdentifier["OneLogin"] = "ONE_LOGIN";
    AuthProviderIdentifier["StubIdp"] = "STUB_IDP";
})(AuthProviderIdentifier || (exports.AuthProviderIdentifier = AuthProviderIdentifier = {}));
var BackgroundJobResultType;
(function (BackgroundJobResultType) {
    BackgroundJobResultType["AuditLogsExport"] = "AUDIT_LOGS_EXPORT";
    BackgroundJobResultType["GithubBuild"] = "GITHUB_BUILD";
    BackgroundJobResultType["UserAuditLogsExport"] = "USER_AUDIT_LOGS_EXPORT";
    BackgroundJobResultType["Void"] = "VOID";
})(BackgroundJobResultType || (exports.BackgroundJobResultType = BackgroundJobResultType = {}));
var BackgroundJobState;
(function (BackgroundJobState) {
    BackgroundJobState["Failure"] = "FAILURE";
    BackgroundJobState["InProgress"] = "IN_PROGRESS";
    BackgroundJobState["Queued"] = "QUEUED";
    BackgroundJobState["Success"] = "SUCCESS";
})(BackgroundJobState || (exports.BackgroundJobState = BackgroundJobState = {}));
var BuildCredentialsSource;
(function (BuildCredentialsSource) {
    BuildCredentialsSource["Local"] = "LOCAL";
    BuildCredentialsSource["Remote"] = "REMOTE";
})(BuildCredentialsSource || (exports.BuildCredentialsSource = BuildCredentialsSource = {}));
var BuildIosEnterpriseProvisioning;
(function (BuildIosEnterpriseProvisioning) {
    BuildIosEnterpriseProvisioning["Adhoc"] = "ADHOC";
    BuildIosEnterpriseProvisioning["Universal"] = "UNIVERSAL";
})(BuildIosEnterpriseProvisioning || (exports.BuildIosEnterpriseProvisioning = BuildIosEnterpriseProvisioning = {}));
var BuildLimitThresholdExceededMetadataType;
(function (BuildLimitThresholdExceededMetadataType) {
    BuildLimitThresholdExceededMetadataType["Ios"] = "IOS";
    BuildLimitThresholdExceededMetadataType["Total"] = "TOTAL";
})(BuildLimitThresholdExceededMetadataType || (exports.BuildLimitThresholdExceededMetadataType = BuildLimitThresholdExceededMetadataType = {}));
var BuildMode;
(function (BuildMode) {
    BuildMode["Build"] = "BUILD";
    BuildMode["Custom"] = "CUSTOM";
    BuildMode["Repack"] = "REPACK";
    BuildMode["Resign"] = "RESIGN";
})(BuildMode || (exports.BuildMode = BuildMode = {}));
var BuildPhase;
(function (BuildPhase) {
    BuildPhase["BuilderInfo"] = "BUILDER_INFO";
    BuildPhase["CleanUpCredentials"] = "CLEAN_UP_CREDENTIALS";
    BuildPhase["CompleteBuild"] = "COMPLETE_BUILD";
    BuildPhase["ConfigureExpoUpdates"] = "CONFIGURE_EXPO_UPDATES";
    BuildPhase["ConfigureXcodeProject"] = "CONFIGURE_XCODE_PROJECT";
    BuildPhase["Custom"] = "CUSTOM";
    BuildPhase["DownloadApplicationArchive"] = "DOWNLOAD_APPLICATION_ARCHIVE";
    BuildPhase["EasBuildInternal"] = "EAS_BUILD_INTERNAL";
    BuildPhase["FailBuild"] = "FAIL_BUILD";
    BuildPhase["FixGradlew"] = "FIX_GRADLEW";
    BuildPhase["InstallCustomTools"] = "INSTALL_CUSTOM_TOOLS";
    BuildPhase["InstallDependencies"] = "INSTALL_DEPENDENCIES";
    BuildPhase["InstallPods"] = "INSTALL_PODS";
    BuildPhase["OnBuildCancelHook"] = "ON_BUILD_CANCEL_HOOK";
    BuildPhase["OnBuildCompleteHook"] = "ON_BUILD_COMPLETE_HOOK";
    BuildPhase["OnBuildErrorHook"] = "ON_BUILD_ERROR_HOOK";
    BuildPhase["OnBuildSuccessHook"] = "ON_BUILD_SUCCESS_HOOK";
    BuildPhase["ParseCustomWorkflowConfig"] = "PARSE_CUSTOM_WORKFLOW_CONFIG";
    BuildPhase["PostInstallHook"] = "POST_INSTALL_HOOK";
    BuildPhase["Prebuild"] = "PREBUILD";
    BuildPhase["PrepareArtifacts"] = "PREPARE_ARTIFACTS";
    BuildPhase["PrepareCredentials"] = "PREPARE_CREDENTIALS";
    BuildPhase["PrepareProject"] = "PREPARE_PROJECT";
    BuildPhase["PreInstallHook"] = "PRE_INSTALL_HOOK";
    BuildPhase["PreUploadArtifactsHook"] = "PRE_UPLOAD_ARTIFACTS_HOOK";
    BuildPhase["Queue"] = "QUEUE";
    BuildPhase["ReadAppConfig"] = "READ_APP_CONFIG";
    BuildPhase["ReadPackageJson"] = "READ_PACKAGE_JSON";
    BuildPhase["RestoreCache"] = "RESTORE_CACHE";
    BuildPhase["RunExpoDoctor"] = "RUN_EXPO_DOCTOR";
    BuildPhase["RunFastlane"] = "RUN_FASTLANE";
    BuildPhase["RunGradlew"] = "RUN_GRADLEW";
    BuildPhase["SaveCache"] = "SAVE_CACHE";
    BuildPhase["SetUpBuildEnvironment"] = "SET_UP_BUILD_ENVIRONMENT";
    BuildPhase["SpinUpBuilder"] = "SPIN_UP_BUILDER";
    BuildPhase["StartBuild"] = "START_BUILD";
    BuildPhase["Unknown"] = "UNKNOWN";
    BuildPhase["UploadApplicationArchive"] = "UPLOAD_APPLICATION_ARCHIVE";
    /** @deprecated No longer supported */
    BuildPhase["UploadArtifacts"] = "UPLOAD_ARTIFACTS";
    BuildPhase["UploadBuildArtifacts"] = "UPLOAD_BUILD_ARTIFACTS";
})(BuildPhase || (exports.BuildPhase = BuildPhase = {}));
var BuildPriority;
(function (BuildPriority) {
    BuildPriority["High"] = "HIGH";
    BuildPriority["Normal"] = "NORMAL";
    BuildPriority["NormalPlus"] = "NORMAL_PLUS";
})(BuildPriority || (exports.BuildPriority = BuildPriority = {}));
var BuildResourceClass;
(function (BuildResourceClass) {
    BuildResourceClass["AndroidDefault"] = "ANDROID_DEFAULT";
    BuildResourceClass["AndroidLarge"] = "ANDROID_LARGE";
    BuildResourceClass["AndroidMedium"] = "ANDROID_MEDIUM";
    BuildResourceClass["IosDefault"] = "IOS_DEFAULT";
    /** @deprecated No longer available. Use IOS_M_LARGE instead. */
    BuildResourceClass["IosIntelLarge"] = "IOS_INTEL_LARGE";
    /** @deprecated No longer available. Use IOS_M_MEDIUM instead. */
    BuildResourceClass["IosIntelMedium"] = "IOS_INTEL_MEDIUM";
    BuildResourceClass["IosLarge"] = "IOS_LARGE";
    /** @deprecated Use IOS_M_MEDIUM instead */
    BuildResourceClass["IosM1Large"] = "IOS_M1_LARGE";
    /** @deprecated Use IOS_M_MEDIUM instead */
    BuildResourceClass["IosM1Medium"] = "IOS_M1_MEDIUM";
    BuildResourceClass["IosMedium"] = "IOS_MEDIUM";
    BuildResourceClass["IosMLarge"] = "IOS_M_LARGE";
    BuildResourceClass["IosMMedium"] = "IOS_M_MEDIUM";
    BuildResourceClass["Legacy"] = "LEGACY";
})(BuildResourceClass || (exports.BuildResourceClass = BuildResourceClass = {}));
var BuildRetryDisabledReason;
(function (BuildRetryDisabledReason) {
    BuildRetryDisabledReason["AlreadyRetried"] = "ALREADY_RETRIED";
    BuildRetryDisabledReason["InvalidStatus"] = "INVALID_STATUS";
    BuildRetryDisabledReason["IsGithubBuild"] = "IS_GITHUB_BUILD";
    BuildRetryDisabledReason["NotCompletedYet"] = "NOT_COMPLETED_YET";
    BuildRetryDisabledReason["TooMuchTimeElapsed"] = "TOO_MUCH_TIME_ELAPSED";
})(BuildRetryDisabledReason || (exports.BuildRetryDisabledReason = BuildRetryDisabledReason = {}));
var BuildStatus;
(function (BuildStatus) {
    BuildStatus["Canceled"] = "CANCELED";
    BuildStatus["Errored"] = "ERRORED";
    BuildStatus["Finished"] = "FINISHED";
    BuildStatus["InProgress"] = "IN_PROGRESS";
    BuildStatus["InQueue"] = "IN_QUEUE";
    BuildStatus["New"] = "NEW";
    BuildStatus["PendingCancel"] = "PENDING_CANCEL";
})(BuildStatus || (exports.BuildStatus = BuildStatus = {}));
var BuildTrigger;
(function (BuildTrigger) {
    BuildTrigger["EasCli"] = "EAS_CLI";
    BuildTrigger["GitBasedIntegration"] = "GIT_BASED_INTEGRATION";
})(BuildTrigger || (exports.BuildTrigger = BuildTrigger = {}));
var BuildWorkflow;
(function (BuildWorkflow) {
    BuildWorkflow["Generic"] = "GENERIC";
    BuildWorkflow["Managed"] = "MANAGED";
    BuildWorkflow["Unknown"] = "UNKNOWN";
})(BuildWorkflow || (exports.BuildWorkflow = BuildWorkflow = {}));
var ContinentCode;
(function (ContinentCode) {
    ContinentCode["Af"] = "AF";
    ContinentCode["An"] = "AN";
    ContinentCode["As"] = "AS";
    ContinentCode["Eu"] = "EU";
    ContinentCode["Na"] = "NA";
    ContinentCode["Oc"] = "OC";
    ContinentCode["Sa"] = "SA";
    ContinentCode["T1"] = "T1";
})(ContinentCode || (exports.ContinentCode = ContinentCode = {}));
var CrashSampleFor;
(function (CrashSampleFor) {
    CrashSampleFor["Newest"] = "NEWEST";
    CrashSampleFor["Oldest"] = "OLDEST";
})(CrashSampleFor || (exports.CrashSampleFor = CrashSampleFor = {}));
var CustomDomainDnsRecordType;
(function (CustomDomainDnsRecordType) {
    CustomDomainDnsRecordType["A"] = "A";
    CustomDomainDnsRecordType["Cname"] = "CNAME";
    CustomDomainDnsRecordType["Txt"] = "TXT";
})(CustomDomainDnsRecordType || (exports.CustomDomainDnsRecordType = CustomDomainDnsRecordType = {}));
var CustomDomainStatus;
(function (CustomDomainStatus) {
    CustomDomainStatus["Active"] = "ACTIVE";
    CustomDomainStatus["Error"] = "ERROR";
    CustomDomainStatus["Pending"] = "PENDING";
    CustomDomainStatus["TimedOut"] = "TIMED_OUT";
})(CustomDomainStatus || (exports.CustomDomainStatus = CustomDomainStatus = {}));
var DistributionType;
(function (DistributionType) {
    DistributionType["Internal"] = "INTERNAL";
    DistributionType["Simulator"] = "SIMULATOR";
    DistributionType["Store"] = "STORE";
})(DistributionType || (exports.DistributionType = DistributionType = {}));
var EasBuildBillingResourceClass;
(function (EasBuildBillingResourceClass) {
    EasBuildBillingResourceClass["Large"] = "LARGE";
    EasBuildBillingResourceClass["Medium"] = "MEDIUM";
})(EasBuildBillingResourceClass || (exports.EasBuildBillingResourceClass = EasBuildBillingResourceClass = {}));
var EasBuildDeprecationInfoType;
(function (EasBuildDeprecationInfoType) {
    EasBuildDeprecationInfoType["Internal"] = "INTERNAL";
    EasBuildDeprecationInfoType["UserFacing"] = "USER_FACING";
})(EasBuildDeprecationInfoType || (exports.EasBuildDeprecationInfoType = EasBuildDeprecationInfoType = {}));
var EasBuildWaiverType;
(function (EasBuildWaiverType) {
    EasBuildWaiverType["FastFailedBuild"] = "FAST_FAILED_BUILD";
    EasBuildWaiverType["SystemError"] = "SYSTEM_ERROR";
})(EasBuildWaiverType || (exports.EasBuildWaiverType = EasBuildWaiverType = {}));
var EasService;
(function (EasService) {
    EasService["Builds"] = "BUILDS";
    EasService["Jobs"] = "JOBS";
    EasService["Updates"] = "UPDATES";
})(EasService || (exports.EasService = EasService = {}));
var EasServiceMetric;
(function (EasServiceMetric) {
    EasServiceMetric["AssetsRequests"] = "ASSETS_REQUESTS";
    EasServiceMetric["BandwidthUsage"] = "BANDWIDTH_USAGE";
    EasServiceMetric["Builds"] = "BUILDS";
    EasServiceMetric["ManifestRequests"] = "MANIFEST_REQUESTS";
    EasServiceMetric["RunTime"] = "RUN_TIME";
    EasServiceMetric["UniqueUpdaters"] = "UNIQUE_UPDATERS";
    EasServiceMetric["UniqueUsers"] = "UNIQUE_USERS";
})(EasServiceMetric || (exports.EasServiceMetric = EasServiceMetric = {}));
var EasTotalPlanEnablementUnit;
(function (EasTotalPlanEnablementUnit) {
    EasTotalPlanEnablementUnit["Build"] = "BUILD";
    EasTotalPlanEnablementUnit["Byte"] = "BYTE";
    EasTotalPlanEnablementUnit["Concurrency"] = "CONCURRENCY";
    EasTotalPlanEnablementUnit["Request"] = "REQUEST";
    EasTotalPlanEnablementUnit["Updater"] = "UPDATER";
    EasTotalPlanEnablementUnit["User"] = "USER";
})(EasTotalPlanEnablementUnit || (exports.EasTotalPlanEnablementUnit = EasTotalPlanEnablementUnit = {}));
var EntityTypeName;
(function (EntityTypeName) {
    EntityTypeName["Account"] = "Account";
    EntityTypeName["AccountSsoConfiguration"] = "AccountSSOConfiguration";
    EntityTypeName["AndroidAppCredentials"] = "AndroidAppCredentials";
    EntityTypeName["AndroidKeystore"] = "AndroidKeystore";
    EntityTypeName["App"] = "App";
    EntityTypeName["AppStoreConnectApiKey"] = "AppStoreConnectApiKey";
    EntityTypeName["AppleDevice"] = "AppleDevice";
    EntityTypeName["AppleDistributionCertificate"] = "AppleDistributionCertificate";
    EntityTypeName["AppleProvisioningProfile"] = "AppleProvisioningProfile";
    EntityTypeName["AppleTeam"] = "AppleTeam";
    EntityTypeName["Branch"] = "Branch";
    EntityTypeName["Channel"] = "Channel";
    EntityTypeName["Customer"] = "Customer";
    EntityTypeName["GoogleServiceAccountKey"] = "GoogleServiceAccountKey";
    EntityTypeName["IosAppCredentials"] = "IosAppCredentials";
    EntityTypeName["UserInvitation"] = "UserInvitation";
    EntityTypeName["UserPermission"] = "UserPermission";
})(EntityTypeName || (exports.EntityTypeName = EntityTypeName = {}));
var EnvironmentSecretType;
(function (EnvironmentSecretType) {
    EnvironmentSecretType["FileBase64"] = "FILE_BASE64";
    EnvironmentSecretType["String"] = "STRING";
})(EnvironmentSecretType || (exports.EnvironmentSecretType = EnvironmentSecretType = {}));
var EnvironmentVariableEnvironment;
(function (EnvironmentVariableEnvironment) {
    EnvironmentVariableEnvironment["Development"] = "DEVELOPMENT";
    EnvironmentVariableEnvironment["Preview"] = "PREVIEW";
    EnvironmentVariableEnvironment["Production"] = "PRODUCTION";
})(EnvironmentVariableEnvironment || (exports.EnvironmentVariableEnvironment = EnvironmentVariableEnvironment = {}));
var EnvironmentVariableScope;
(function (EnvironmentVariableScope) {
    EnvironmentVariableScope["Project"] = "PROJECT";
    EnvironmentVariableScope["Shared"] = "SHARED";
})(EnvironmentVariableScope || (exports.EnvironmentVariableScope = EnvironmentVariableScope = {}));
var EnvironmentVariableVisibility;
(function (EnvironmentVariableVisibility) {
    EnvironmentVariableVisibility["Public"] = "PUBLIC";
    EnvironmentVariableVisibility["Secret"] = "SECRET";
    EnvironmentVariableVisibility["Sensitive"] = "SENSITIVE";
})(EnvironmentVariableVisibility || (exports.EnvironmentVariableVisibility = EnvironmentVariableVisibility = {}));
var Experiment;
(function (Experiment) {
    Experiment["Orbit"] = "ORBIT";
})(Experiment || (exports.Experiment = Experiment = {}));
var Feature;
(function (Feature) {
    /** Priority Builds */
    Feature["Builds"] = "BUILDS";
    /** Funds support for open source development */
    Feature["OpenSource"] = "OPEN_SOURCE";
    /** Top Tier Support */
    Feature["Support"] = "SUPPORT";
    /** Share access to projects */
    Feature["Teams"] = "TEAMS";
})(Feature || (exports.Feature = Feature = {}));
var FingerprintSourceType;
(function (FingerprintSourceType) {
    FingerprintSourceType["Gcs"] = "GCS";
})(FingerprintSourceType || (exports.FingerprintSourceType = FingerprintSourceType = {}));
var GitHubAppEnvironment;
(function (GitHubAppEnvironment) {
    GitHubAppEnvironment["Development"] = "DEVELOPMENT";
    GitHubAppEnvironment["Production"] = "PRODUCTION";
    GitHubAppEnvironment["Staging"] = "STAGING";
})(GitHubAppEnvironment || (exports.GitHubAppEnvironment = GitHubAppEnvironment = {}));
var GitHubAppInstallationStatus;
(function (GitHubAppInstallationStatus) {
    GitHubAppInstallationStatus["Active"] = "ACTIVE";
    GitHubAppInstallationStatus["NotInstalled"] = "NOT_INSTALLED";
    GitHubAppInstallationStatus["Suspended"] = "SUSPENDED";
})(GitHubAppInstallationStatus || (exports.GitHubAppInstallationStatus = GitHubAppInstallationStatus = {}));
var GitHubBuildTriggerExecutionBehavior;
(function (GitHubBuildTriggerExecutionBehavior) {
    GitHubBuildTriggerExecutionBehavior["Always"] = "ALWAYS";
    GitHubBuildTriggerExecutionBehavior["BaseDirectoryChanged"] = "BASE_DIRECTORY_CHANGED";
})(GitHubBuildTriggerExecutionBehavior || (exports.GitHubBuildTriggerExecutionBehavior = GitHubBuildTriggerExecutionBehavior = {}));
var GitHubBuildTriggerRunStatus;
(function (GitHubBuildTriggerRunStatus) {
    GitHubBuildTriggerRunStatus["Errored"] = "ERRORED";
    GitHubBuildTriggerRunStatus["Success"] = "SUCCESS";
})(GitHubBuildTriggerRunStatus || (exports.GitHubBuildTriggerRunStatus = GitHubBuildTriggerRunStatus = {}));
var GitHubBuildTriggerType;
(function (GitHubBuildTriggerType) {
    GitHubBuildTriggerType["PullRequestUpdated"] = "PULL_REQUEST_UPDATED";
    GitHubBuildTriggerType["PushToBranch"] = "PUSH_TO_BRANCH";
    GitHubBuildTriggerType["TagUpdated"] = "TAG_UPDATED";
})(GitHubBuildTriggerType || (exports.GitHubBuildTriggerType = GitHubBuildTriggerType = {}));
var GitHubJobRunJobType;
(function (GitHubJobRunJobType) {
    GitHubJobRunJobType["PublishUpdate"] = "PUBLISH_UPDATE";
})(GitHubJobRunJobType || (exports.GitHubJobRunJobType = GitHubJobRunJobType = {}));
var GitHubJobRunTriggerRunStatus;
(function (GitHubJobRunTriggerRunStatus) {
    GitHubJobRunTriggerRunStatus["Errored"] = "ERRORED";
    GitHubJobRunTriggerRunStatus["Success"] = "SUCCESS";
})(GitHubJobRunTriggerRunStatus || (exports.GitHubJobRunTriggerRunStatus = GitHubJobRunTriggerRunStatus = {}));
var GitHubJobRunTriggerType;
(function (GitHubJobRunTriggerType) {
    GitHubJobRunTriggerType["PullRequestUpdated"] = "PULL_REQUEST_UPDATED";
    GitHubJobRunTriggerType["PushToBranch"] = "PUSH_TO_BRANCH";
})(GitHubJobRunTriggerType || (exports.GitHubJobRunTriggerType = GitHubJobRunTriggerType = {}));
var InsightsFilterType;
(function (InsightsFilterType) {
    InsightsFilterType["Platform"] = "PLATFORM";
})(InsightsFilterType || (exports.InsightsFilterType = InsightsFilterType = {}));
var InvoiceDiscountType;
(function (InvoiceDiscountType) {
    InvoiceDiscountType["Amount"] = "AMOUNT";
    InvoiceDiscountType["Percentage"] = "PERCENTAGE";
})(InvoiceDiscountType || (exports.InvoiceDiscountType = InvoiceDiscountType = {}));
/** @deprecated Use developmentClient option instead. */
var IosBuildType;
(function (IosBuildType) {
    IosBuildType["DevelopmentClient"] = "DEVELOPMENT_CLIENT";
    IosBuildType["Release"] = "RELEASE";
})(IosBuildType || (exports.IosBuildType = IosBuildType = {}));
var IosDistributionType;
(function (IosDistributionType) {
    IosDistributionType["AdHoc"] = "AD_HOC";
    IosDistributionType["AppStore"] = "APP_STORE";
    IosDistributionType["Development"] = "DEVELOPMENT";
    IosDistributionType["Enterprise"] = "ENTERPRISE";
})(IosDistributionType || (exports.IosDistributionType = IosDistributionType = {}));
/** @deprecated Use developmentClient option instead. */
var IosManagedBuildType;
(function (IosManagedBuildType) {
    IosManagedBuildType["DevelopmentClient"] = "DEVELOPMENT_CLIENT";
    IosManagedBuildType["Release"] = "RELEASE";
})(IosManagedBuildType || (exports.IosManagedBuildType = IosManagedBuildType = {}));
var IosSchemeBuildConfiguration;
(function (IosSchemeBuildConfiguration) {
    IosSchemeBuildConfiguration["Debug"] = "DEBUG";
    IosSchemeBuildConfiguration["Release"] = "RELEASE";
})(IosSchemeBuildConfiguration || (exports.IosSchemeBuildConfiguration = IosSchemeBuildConfiguration = {}));
var JobRunPriority;
(function (JobRunPriority) {
    JobRunPriority["High"] = "HIGH";
    JobRunPriority["Normal"] = "NORMAL";
})(JobRunPriority || (exports.JobRunPriority = JobRunPriority = {}));
var JobRunStatus;
(function (JobRunStatus) {
    JobRunStatus["Canceled"] = "CANCELED";
    JobRunStatus["Errored"] = "ERRORED";
    JobRunStatus["Finished"] = "FINISHED";
    JobRunStatus["InProgress"] = "IN_PROGRESS";
    JobRunStatus["InQueue"] = "IN_QUEUE";
    JobRunStatus["New"] = "NEW";
    JobRunStatus["PendingCancel"] = "PENDING_CANCEL";
})(JobRunStatus || (exports.JobRunStatus = JobRunStatus = {}));
var MailchimpAudience;
(function (MailchimpAudience) {
    MailchimpAudience["ExpoDevelopers"] = "EXPO_DEVELOPERS";
    MailchimpAudience["ExpoDeveloperOnboarding"] = "EXPO_DEVELOPER_ONBOARDING";
})(MailchimpAudience || (exports.MailchimpAudience = MailchimpAudience = {}));
var MailchimpTag;
(function (MailchimpTag) {
    MailchimpTag["DevClientUsers"] = "DEV_CLIENT_USERS";
    MailchimpTag["DidSubscribeToEasAtLeastOnce"] = "DID_SUBSCRIBE_TO_EAS_AT_LEAST_ONCE";
    MailchimpTag["EasMasterList"] = "EAS_MASTER_LIST";
    MailchimpTag["NewsletterSignupList"] = "NEWSLETTER_SIGNUP_LIST";
})(MailchimpTag || (exports.MailchimpTag = MailchimpTag = {}));
var NotificationEvent;
(function (NotificationEvent) {
    NotificationEvent["BuildComplete"] = "BUILD_COMPLETE";
    NotificationEvent["BuildErrored"] = "BUILD_ERRORED";
    NotificationEvent["BuildLimitThresholdExceeded"] = "BUILD_LIMIT_THRESHOLD_EXCEEDED";
    NotificationEvent["BuildPlanCreditThresholdExceeded"] = "BUILD_PLAN_CREDIT_THRESHOLD_EXCEEDED";
    NotificationEvent["SubmissionComplete"] = "SUBMISSION_COMPLETE";
    NotificationEvent["SubmissionErrored"] = "SUBMISSION_ERRORED";
    NotificationEvent["Test"] = "TEST";
})(NotificationEvent || (exports.NotificationEvent = NotificationEvent = {}));
var NotificationType;
(function (NotificationType) {
    NotificationType["Email"] = "EMAIL";
    NotificationType["Web"] = "WEB";
})(NotificationType || (exports.NotificationType = NotificationType = {}));
var OfferType;
(function (OfferType) {
    /** Addon, or supplementary subscription */
    OfferType["Addon"] = "ADDON";
    /** Advanced Purchase of Paid Resource */
    OfferType["Prepaid"] = "PREPAID";
    /** Term subscription */
    OfferType["Subscription"] = "SUBSCRIPTION";
})(OfferType || (exports.OfferType = OfferType = {}));
var OnboardingDeviceType;
(function (OnboardingDeviceType) {
    OnboardingDeviceType["Device"] = "DEVICE";
    OnboardingDeviceType["Simulator"] = "SIMULATOR";
})(OnboardingDeviceType || (exports.OnboardingDeviceType = OnboardingDeviceType = {}));
var OnboardingEnvironment;
(function (OnboardingEnvironment) {
    OnboardingEnvironment["DevBuild"] = "DEV_BUILD";
    OnboardingEnvironment["ExpoGo"] = "EXPO_GO";
})(OnboardingEnvironment || (exports.OnboardingEnvironment = OnboardingEnvironment = {}));
var Order;
(function (Order) {
    Order["Asc"] = "ASC";
    Order["Desc"] = "DESC";
})(Order || (exports.Order = Order = {}));
var Permission;
(function (Permission) {
    Permission["Admin"] = "ADMIN";
    Permission["Own"] = "OWN";
    Permission["Publish"] = "PUBLISH";
    Permission["View"] = "VIEW";
})(Permission || (exports.Permission = Permission = {}));
var ProjectArchiveSourceType;
(function (ProjectArchiveSourceType) {
    ProjectArchiveSourceType["Gcs"] = "GCS";
    ProjectArchiveSourceType["Git"] = "GIT";
    ProjectArchiveSourceType["None"] = "NONE";
    ProjectArchiveSourceType["S3"] = "S3";
    ProjectArchiveSourceType["Url"] = "URL";
})(ProjectArchiveSourceType || (exports.ProjectArchiveSourceType = ProjectArchiveSourceType = {}));
var RequestMethod;
(function (RequestMethod) {
    RequestMethod["Delete"] = "DELETE";
    RequestMethod["Get"] = "GET";
    RequestMethod["Head"] = "HEAD";
    RequestMethod["Options"] = "OPTIONS";
    RequestMethod["Patch"] = "PATCH";
    RequestMethod["Post"] = "POST";
    RequestMethod["Put"] = "PUT";
})(RequestMethod || (exports.RequestMethod = RequestMethod = {}));
var ResourceClassExperiment;
(function (ResourceClassExperiment) {
    ResourceClassExperiment["C3D"] = "C3D";
    ResourceClassExperiment["N2"] = "N2";
})(ResourceClassExperiment || (exports.ResourceClassExperiment = ResourceClassExperiment = {}));
var ResponseCacheStatus;
(function (ResponseCacheStatus) {
    ResponseCacheStatus["Hit"] = "HIT";
    ResponseCacheStatus["Miss"] = "MISS";
    ResponseCacheStatus["Pass"] = "PASS";
})(ResponseCacheStatus || (exports.ResponseCacheStatus = ResponseCacheStatus = {}));
var ResponseStatusType;
(function (ResponseStatusType) {
    ResponseStatusType["ClientError"] = "CLIENT_ERROR";
    ResponseStatusType["None"] = "NONE";
    ResponseStatusType["Redirect"] = "REDIRECT";
    ResponseStatusType["ServerError"] = "SERVER_ERROR";
    ResponseStatusType["Successful"] = "SUCCESSFUL";
})(ResponseStatusType || (exports.ResponseStatusType = ResponseStatusType = {}));
var ResponseType;
(function (ResponseType) {
    ResponseType["Asset"] = "ASSET";
    ResponseType["Crash"] = "CRASH";
    ResponseType["Rejected"] = "REJECTED";
    ResponseType["Route"] = "ROUTE";
})(ResponseType || (exports.ResponseType = ResponseType = {}));
var Role;
(function (Role) {
    Role["Admin"] = "ADMIN";
    Role["Custom"] = "CUSTOM";
    Role["Developer"] = "DEVELOPER";
    Role["HasAdmin"] = "HAS_ADMIN";
    Role["NotAdmin"] = "NOT_ADMIN";
    Role["Owner"] = "OWNER";
    Role["ViewOnly"] = "VIEW_ONLY";
})(Role || (exports.Role = Role = {}));
var SecondFactorMethod;
(function (SecondFactorMethod) {
    /** Google Authenticator (TOTP) */
    SecondFactorMethod["Authenticator"] = "AUTHENTICATOR";
    /** SMS */
    SecondFactorMethod["Sms"] = "SMS";
})(SecondFactorMethod || (exports.SecondFactorMethod = SecondFactorMethod = {}));
var StandardOffer;
(function (StandardOffer) {
    /** $29 USD per month, 30 day trial */
    StandardOffer["Default"] = "DEFAULT";
    /** $800 USD per month */
    StandardOffer["Support"] = "SUPPORT";
    /** $29 USD per month, 1 year trial */
    StandardOffer["YcDeals"] = "YC_DEALS";
    /** $348 USD per year, 30 day trial */
    StandardOffer["YearlySub"] = "YEARLY_SUB";
})(StandardOffer || (exports.StandardOffer = StandardOffer = {}));
/** Possible Incident impact values from Expo status page API. */
var StatuspageIncidentImpact;
(function (StatuspageIncidentImpact) {
    StatuspageIncidentImpact["Critical"] = "CRITICAL";
    StatuspageIncidentImpact["Maintenance"] = "MAINTENANCE";
    StatuspageIncidentImpact["Major"] = "MAJOR";
    StatuspageIncidentImpact["Minor"] = "MINOR";
    StatuspageIncidentImpact["None"] = "NONE";
})(StatuspageIncidentImpact || (exports.StatuspageIncidentImpact = StatuspageIncidentImpact = {}));
/** Possible Incident statuses from Expo status page API. */
var StatuspageIncidentStatus;
(function (StatuspageIncidentStatus) {
    StatuspageIncidentStatus["Completed"] = "COMPLETED";
    StatuspageIncidentStatus["Identified"] = "IDENTIFIED";
    StatuspageIncidentStatus["Investigating"] = "INVESTIGATING";
    StatuspageIncidentStatus["InProgress"] = "IN_PROGRESS";
    StatuspageIncidentStatus["Monitoring"] = "MONITORING";
    StatuspageIncidentStatus["Resolved"] = "RESOLVED";
    StatuspageIncidentStatus["Scheduled"] = "SCHEDULED";
    StatuspageIncidentStatus["Verifying"] = "VERIFYING";
})(StatuspageIncidentStatus || (exports.StatuspageIncidentStatus = StatuspageIncidentStatus = {}));
/** Name of a service monitored by Expo status page. */
var StatuspageServiceName;
(function (StatuspageServiceName) {
    StatuspageServiceName["EasBuild"] = "EAS_BUILD";
    StatuspageServiceName["EasSubmit"] = "EAS_SUBMIT";
    StatuspageServiceName["EasUpdate"] = "EAS_UPDATE";
    StatuspageServiceName["GithubApiRequests"] = "GITHUB_API_REQUESTS";
    StatuspageServiceName["GithubWebhooks"] = "GITHUB_WEBHOOKS";
})(StatuspageServiceName || (exports.StatuspageServiceName = StatuspageServiceName = {}));
/** Possible statuses for a service. */
var StatuspageServiceStatus;
(function (StatuspageServiceStatus) {
    StatuspageServiceStatus["DegradedPerformance"] = "DEGRADED_PERFORMANCE";
    StatuspageServiceStatus["MajorOutage"] = "MAJOR_OUTAGE";
    StatuspageServiceStatus["Operational"] = "OPERATIONAL";
    StatuspageServiceStatus["PartialOutage"] = "PARTIAL_OUTAGE";
    StatuspageServiceStatus["UnderMaintenance"] = "UNDER_MAINTENANCE";
})(StatuspageServiceStatus || (exports.StatuspageServiceStatus = StatuspageServiceStatus = {}));
var SubmissionAndroidArchiveType;
(function (SubmissionAndroidArchiveType) {
    SubmissionAndroidArchiveType["Aab"] = "AAB";
    SubmissionAndroidArchiveType["Apk"] = "APK";
})(SubmissionAndroidArchiveType || (exports.SubmissionAndroidArchiveType = SubmissionAndroidArchiveType = {}));
var SubmissionAndroidReleaseStatus;
(function (SubmissionAndroidReleaseStatus) {
    SubmissionAndroidReleaseStatus["Completed"] = "COMPLETED";
    SubmissionAndroidReleaseStatus["Draft"] = "DRAFT";
    SubmissionAndroidReleaseStatus["Halted"] = "HALTED";
    SubmissionAndroidReleaseStatus["InProgress"] = "IN_PROGRESS";
})(SubmissionAndroidReleaseStatus || (exports.SubmissionAndroidReleaseStatus = SubmissionAndroidReleaseStatus = {}));
var SubmissionAndroidTrack;
(function (SubmissionAndroidTrack) {
    SubmissionAndroidTrack["Alpha"] = "ALPHA";
    SubmissionAndroidTrack["Beta"] = "BETA";
    SubmissionAndroidTrack["Internal"] = "INTERNAL";
    SubmissionAndroidTrack["Production"] = "PRODUCTION";
})(SubmissionAndroidTrack || (exports.SubmissionAndroidTrack = SubmissionAndroidTrack = {}));
var SubmissionArchiveSourceType;
(function (SubmissionArchiveSourceType) {
    SubmissionArchiveSourceType["GcsBuildApplicationArchive"] = "GCS_BUILD_APPLICATION_ARCHIVE";
    SubmissionArchiveSourceType["GcsSubmitArchive"] = "GCS_SUBMIT_ARCHIVE";
    SubmissionArchiveSourceType["Url"] = "URL";
})(SubmissionArchiveSourceType || (exports.SubmissionArchiveSourceType = SubmissionArchiveSourceType = {}));
var SubmissionPriority;
(function (SubmissionPriority) {
    SubmissionPriority["High"] = "HIGH";
    SubmissionPriority["Normal"] = "NORMAL";
})(SubmissionPriority || (exports.SubmissionPriority = SubmissionPriority = {}));
var SubmissionStatus;
(function (SubmissionStatus) {
    SubmissionStatus["AwaitingBuild"] = "AWAITING_BUILD";
    SubmissionStatus["Canceled"] = "CANCELED";
    SubmissionStatus["Errored"] = "ERRORED";
    SubmissionStatus["Finished"] = "FINISHED";
    SubmissionStatus["InProgress"] = "IN_PROGRESS";
    SubmissionStatus["InQueue"] = "IN_QUEUE";
})(SubmissionStatus || (exports.SubmissionStatus = SubmissionStatus = {}));
var TargetEntityMutationType;
(function (TargetEntityMutationType) {
    TargetEntityMutationType["Create"] = "CREATE";
    TargetEntityMutationType["Delete"] = "DELETE";
    TargetEntityMutationType["Update"] = "UPDATE";
})(TargetEntityMutationType || (exports.TargetEntityMutationType = TargetEntityMutationType = {}));
var UploadSessionType;
(function (UploadSessionType) {
    UploadSessionType["EasBuildGcsProjectMetadata"] = "EAS_BUILD_GCS_PROJECT_METADATA";
    UploadSessionType["EasBuildGcsProjectSources"] = "EAS_BUILD_GCS_PROJECT_SOURCES";
    /** @deprecated Use EAS_BUILD_GCS_PROJECT_SOURCES instead. */
    UploadSessionType["EasBuildProjectSources"] = "EAS_BUILD_PROJECT_SOURCES";
    /** @deprecated Use EAS_SUBMIT_GCS_APP_ARCHIVE instead. */
    UploadSessionType["EasSubmitAppArchive"] = "EAS_SUBMIT_APP_ARCHIVE";
    UploadSessionType["EasSubmitGcsAppArchive"] = "EAS_SUBMIT_GCS_APP_ARCHIVE";
    UploadSessionType["EasUpdateFingerprint"] = "EAS_UPDATE_FINGERPRINT";
})(UploadSessionType || (exports.UploadSessionType = UploadSessionType = {}));
var UsageMetricType;
(function (UsageMetricType) {
    UsageMetricType["Bandwidth"] = "BANDWIDTH";
    UsageMetricType["Build"] = "BUILD";
    UsageMetricType["Minute"] = "MINUTE";
    UsageMetricType["Request"] = "REQUEST";
    UsageMetricType["Update"] = "UPDATE";
    UsageMetricType["User"] = "USER";
})(UsageMetricType || (exports.UsageMetricType = UsageMetricType = {}));
var UsageMetricsGranularity;
(function (UsageMetricsGranularity) {
    UsageMetricsGranularity["Day"] = "DAY";
    UsageMetricsGranularity["Hour"] = "HOUR";
    UsageMetricsGranularity["Minute"] = "MINUTE";
    UsageMetricsGranularity["Total"] = "TOTAL";
})(UsageMetricsGranularity || (exports.UsageMetricsGranularity = UsageMetricsGranularity = {}));
var UserAgentBrowser;
(function (UserAgentBrowser) {
    UserAgentBrowser["AndroidMobile"] = "ANDROID_MOBILE";
    UserAgentBrowser["Chrome"] = "CHROME";
    UserAgentBrowser["ChromeIos"] = "CHROME_IOS";
    UserAgentBrowser["Edge"] = "EDGE";
    UserAgentBrowser["FacebookMobile"] = "FACEBOOK_MOBILE";
    UserAgentBrowser["Firefox"] = "FIREFOX";
    UserAgentBrowser["FirefoxIos"] = "FIREFOX_IOS";
    UserAgentBrowser["InternetExplorer"] = "INTERNET_EXPLORER";
    UserAgentBrowser["Konqueror"] = "KONQUEROR";
    UserAgentBrowser["Mozilla"] = "MOZILLA";
    UserAgentBrowser["Opera"] = "OPERA";
    UserAgentBrowser["Safari"] = "SAFARI";
    UserAgentBrowser["SafariMobile"] = "SAFARI_MOBILE";
    UserAgentBrowser["SamsungInternet"] = "SAMSUNG_INTERNET";
    UserAgentBrowser["UcBrowser"] = "UC_BROWSER";
})(UserAgentBrowser || (exports.UserAgentBrowser = UserAgentBrowser = {}));
var UserAgentOs;
(function (UserAgentOs) {
    UserAgentOs["Android"] = "ANDROID";
    UserAgentOs["ChromeOs"] = "CHROME_OS";
    UserAgentOs["Ios"] = "IOS";
    UserAgentOs["IpadOs"] = "IPAD_OS";
    UserAgentOs["Linux"] = "LINUX";
    UserAgentOs["MacOs"] = "MAC_OS";
    UserAgentOs["Windows"] = "WINDOWS";
})(UserAgentOs || (exports.UserAgentOs = UserAgentOs = {}));
var UserEntityTypeName;
(function (UserEntityTypeName) {
    UserEntityTypeName["AccessToken"] = "AccessToken";
    UserEntityTypeName["DiscordUser"] = "DiscordUser";
    UserEntityTypeName["GitHubUser"] = "GitHubUser";
    UserEntityTypeName["Password"] = "Password";
    UserEntityTypeName["SsoUser"] = "SSOUser";
    UserEntityTypeName["User"] = "User";
    UserEntityTypeName["UserPermission"] = "UserPermission";
    UserEntityTypeName["UserSecondFactorBackupCodes"] = "UserSecondFactorBackupCodes";
    UserEntityTypeName["UserSecondFactorDevice"] = "UserSecondFactorDevice";
})(UserEntityTypeName || (exports.UserEntityTypeName = UserEntityTypeName = {}));
var WebhookType;
(function (WebhookType) {
    WebhookType["Build"] = "BUILD";
    WebhookType["Submit"] = "SUBMIT";
})(WebhookType || (exports.WebhookType = WebhookType = {}));
var WorkerDeploymentLogLevel;
(function (WorkerDeploymentLogLevel) {
    WorkerDeploymentLogLevel["Debug"] = "DEBUG";
    WorkerDeploymentLogLevel["Error"] = "ERROR";
    WorkerDeploymentLogLevel["Fatal"] = "FATAL";
    WorkerDeploymentLogLevel["Info"] = "INFO";
    WorkerDeploymentLogLevel["Log"] = "LOG";
    WorkerDeploymentLogLevel["Warn"] = "WARN";
})(WorkerDeploymentLogLevel || (exports.WorkerDeploymentLogLevel = WorkerDeploymentLogLevel = {}));
var WorkerLoggerLevel;
(function (WorkerLoggerLevel) {
    WorkerLoggerLevel["Debug"] = "DEBUG";
    WorkerLoggerLevel["Error"] = "ERROR";
    WorkerLoggerLevel["Fatal"] = "FATAL";
    WorkerLoggerLevel["Info"] = "INFO";
    WorkerLoggerLevel["Trace"] = "TRACE";
    WorkerLoggerLevel["Warn"] = "WARN";
})(WorkerLoggerLevel || (exports.WorkerLoggerLevel = WorkerLoggerLevel = {}));
