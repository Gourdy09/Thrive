import { ExpoGraphqlClient } from '../../commandUtils/context/contextUtils/createGraphqlClient';
import { CodeSigningInfoInput, GetSignedUploadMutation, PublishUpdateGroupInput, SetCodeSigningInfoMutation, UpdateFragment } from '../generated';
export declare const PublishMutation: {
    getUploadURLsAsync(graphqlClient: ExpoGraphqlClient, contentTypes: string[]): Promise<GetSignedUploadMutation['asset']['getSignedAssetUploadSpecifications']>;
    publishUpdateGroupAsync(graphqlClient: ExpoGraphqlClient, publishUpdateGroupsInput: PublishUpdateGroupInput[]): Promise<UpdateFragment[]>;
    setCodeSigningInfoAsync(graphqlClient: ExpoGraphqlClient, updateId: string, codeSigningInfo: CodeSigningInfoInput): Promise<SetCodeSigningInfoMutation['update']['setCodeSigningInfo']>;
    setRolloutPercentageAsync(graphqlClient: ExpoGraphqlClient, updateId: string, rolloutPercentage: number): Promise<UpdateFragment>;
};
