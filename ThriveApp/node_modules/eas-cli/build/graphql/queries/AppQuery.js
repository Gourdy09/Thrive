"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppQuery = void 0;
const tslib_1 = require("tslib");
const assert_1 = tslib_1.__importDefault(require("assert"));
const graphql_1 = require("graphql");
const graphql_tag_1 = tslib_1.__importDefault(require("graphql-tag"));
const client_1 = require("../client");
const App_1 = require("../types/App");
exports.AppQuery = {
    async byIdAsync(graphqlClient, projectId) {
        const data = await (0, client_1.withErrorHandlingAsync)(graphqlClient
            .query((0, graphql_tag_1.default) `
            query AppByIdQuery($appId: String!) {
              app {
                byId(appId: $appId) {
                  id
                  ...AppFragment
                }
              }
            }
            ${(0, graphql_1.print)(App_1.AppFragmentNode)}
          `, { appId: projectId }, {
            additionalTypenames: ['App'],
        })
            .toPromise());
        (0, assert_1.default)(data.app, 'GraphQL: `app` not defined in server response');
        return data.app.byId;
    },
    async byFullNameAsync(graphqlClient, fullName) {
        const data = await (0, client_1.withErrorHandlingAsync)(graphqlClient
            .query((0, graphql_tag_1.default) `
            query AppByFullNameQuery($fullName: String!) {
              app {
                byFullName(fullName: $fullName) {
                  id
                  ...AppFragment
                }
              }
            }
            ${(0, graphql_1.print)(App_1.AppFragmentNode)}
          `, { fullName }, {
            additionalTypenames: ['App'],
        })
            .toPromise());
        (0, assert_1.default)(data.app, 'GraphQL: `app` not defined in server response');
        return data.app.byFullName;
    },
};
