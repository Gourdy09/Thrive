import { EASUpdateAction, EASUpdateContext } from '../../eas-update/utils';
import { UpdateChannelBasicInfoFragment } from '../../graphql/generated';
import { UpdateBranchObject, UpdateChannelObject } from '../../graphql/queries/ChannelQuery';
import { Rollout } from '../branch-mapping';
export declare enum EndOutcome {
    REPUBLISH_AND_REVERT = "republish-and-revert",
    REVERT = "revert"
}
export type GeneralOptions = {
    privateKeyPath: string | null;
};
export type NonInteractiveOptions = {
    outcome: EndOutcome;
};
/**
 * End an existing rollout for the project.
 */
export declare class EndRollout implements EASUpdateAction<UpdateChannelBasicInfoFragment> {
    private readonly channelInfo;
    private readonly options;
    constructor(channelInfo: UpdateChannelBasicInfoFragment, options: Partial<NonInteractiveOptions> & GeneralOptions);
    runAsync(ctx: EASUpdateContext): Promise<UpdateChannelBasicInfoFragment>;
    getChannelObjectAsync(ctx: EASUpdateContext): Promise<UpdateChannelObject>;
    selectOutcomeAsync(rollout: Rollout<UpdateBranchObject>): Promise<EndOutcome>;
    performOutcomeAsync(ctx: EASUpdateContext, rollout: Rollout<UpdateBranchObject>, outcome: EndOutcome): Promise<UpdateChannelBasicInfoFragment>;
    confirmOutcomeAsync(ctx: EASUpdateContext, selectedOutcome: EndOutcome, rollout: Rollout<UpdateBranchObject>): Promise<boolean>;
}
