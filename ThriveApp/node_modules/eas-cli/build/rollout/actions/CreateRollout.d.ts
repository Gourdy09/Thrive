import { EASUpdateAction, EASUpdateContext } from '../../eas-update/utils';
import { UpdateBranchBasicInfoFragment, UpdateChannelBasicInfoFragment, UpdateFragment } from '../../graphql/generated';
import { UpdateChannelObject } from '../../graphql/queries/ChannelQuery';
export type NonInteractiveOptions = {
    branchNameToRollout: string;
    percent: number;
    runtimeVersion: string;
};
/**
 * Create a rollout for the project.
 */
export declare class CreateRollout implements EASUpdateAction<UpdateChannelBasicInfoFragment> {
    private readonly channelInfo;
    private readonly options;
    constructor(channelInfo: UpdateChannelBasicInfoFragment, options?: Partial<NonInteractiveOptions>);
    runAsync(ctx: EASUpdateContext): Promise<UpdateChannelBasicInfoFragment>;
    confirmCreationAsync(ctx: EASUpdateContext): Promise<boolean>;
    getChannelObjectAsync(ctx: EASUpdateContext, runtimeVersion: string): Promise<UpdateChannelObject>;
    getLatestUpdateGroupOnBranchAsync(ctx: EASUpdateContext, branchInfo: UpdateBranchBasicInfoFragment, runtimeVersion: string): Promise<UpdateFragment[] | null>;
    selectRuntimeVersionAsync(ctx: EASUpdateContext, branchToRollout: UpdateBranchBasicInfoFragment, defaultBranchId: string): Promise<string>;
    selectRuntimeVersionFromAlternativeSourceAsync(ctx: EASUpdateContext, branchToRollout: UpdateBranchBasicInfoFragment, defaultBranch: UpdateBranchBasicInfoFragment): Promise<string>;
    selectRuntimeVersionFromProjectConfigAsync(ctx: EASUpdateContext): Promise<string>;
    selectBranchAsync(ctx: EASUpdateContext, defaultBranchId: string): Promise<UpdateBranchBasicInfoFragment>;
    resolveBranchNameAsync(ctx: EASUpdateContext, branchName: string): Promise<UpdateBranchBasicInfoFragment>;
}
