"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UseExistingGoogleServiceAccountKey = void 0;
const tslib_1 = require("tslib");
const log_1 = tslib_1.__importDefault(require("../../../log"));
const googleServiceAccountKey_1 = require("../utils/googleServiceAccountKey");
class UseExistingGoogleServiceAccountKey {
    constructor(account) {
        this.account = account;
    }
    async runAsync(ctx) {
        if (ctx.nonInteractive) {
            throw new Error(`Existing Google Service Account Key cannot be chosen in non-interactive mode.`);
        }
        const gsaKeyFragments = await ctx.android.getGoogleServiceAccountKeysForAccountAsync(ctx.graphqlClient, this.account);
        if (gsaKeyFragments.length === 0) {
            log_1.default.error("There aren't any Google Service Account Keys associated with your account.");
            return null;
        }
        return await (0, googleServiceAccountKey_1.selectGoogleServiceAccountKeyAsync)(gsaKeyFragments);
    }
}
exports.UseExistingGoogleServiceAccountKey = UseExistingGoogleServiceAccountKey;
