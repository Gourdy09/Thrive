"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoveKeystore = void 0;
const tslib_1 = require("tslib");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const DownloadKeystore_1 = require("./DownloadKeystore");
const log_1 = tslib_1.__importDefault(require("../../../log"));
const prompts_1 = require("../../../prompts");
class RemoveKeystore {
    constructor(app) {
        this.app = app;
    }
    async runAsync(ctx, buildCredentials) {
        if (ctx.nonInteractive) {
            throw new Error("Deleting a keystore is a destructive operation. Start the CLI without the '--non-interactive' flag to delete the credentials.");
        }
        const keystore = buildCredentials.androidKeystore;
        if (!keystore) {
            log_1.default.warn(`There is no valid Keystore defined for build credentials: ${buildCredentials.name}`);
            return;
        }
        this.displayWarning();
        const confirm = await (0, prompts_1.confirmAsync)({
            message: 'Permanently delete the Android Keystore?',
            initial: false,
        });
        if (!confirm) {
            return;
        }
        await new DownloadKeystore_1.BackupKeystore(this.app).runAsync(ctx, buildCredentials);
        await ctx.android.deleteKeystoreAsync(ctx.graphqlClient, keystore);
        log_1.default.succeed('Keystore removed');
    }
    displayWarning() {
        log_1.default.newLine();
        log_1.default.warn(`Clearing your Android build credentials from our build servers is a ${chalk_1.default.bold('PERMANENT and IRREVERSIBLE action.')}`);
        log_1.default.warn(chalk_1.default.bold('Android Keystore must be identical to the one previously used to submit your app to the Google Play Store.'));
        log_1.default.warn('Read https://docs.expo.dev/distribution/building-standalone-apps/#if-you-choose-to-build-for-android for more info before proceeding.');
        log_1.default.newLine();
        log_1.default.warn(chalk_1.default.bold('Your Keystore will be backed up to your current directory if you continue.'));
        log_1.default.newLine();
    }
}
exports.RemoveKeystore = RemoveKeystore;
