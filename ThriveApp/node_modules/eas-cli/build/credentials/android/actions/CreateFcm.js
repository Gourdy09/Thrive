"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateFcm = void 0;
const tslib_1 = require("tslib");
const generated_1 = require("../../../graphql/generated");
const log_1 = tslib_1.__importDefault(require("../../../log"));
const prompts_1 = require("../../../prompts");
class CreateFcm {
    constructor(account) {
        this.account = account;
    }
    async runAsync(ctx) {
        if (ctx.nonInteractive) {
            throw new Error(`FCM API Key cannot be uploaded in non-interactive mode.`);
        }
        const { fcmApiKey } = await (0, prompts_1.promptAsync)([
            {
                type: 'text',
                name: 'fcmApiKey',
                message: 'FCM API Key',
                validate: (value) => value.length > 0 || "FCM API Key can't be empty",
            },
        ]);
        const fcmFragment = await ctx.android.createFcmAsync(ctx.graphqlClient, this.account, fcmApiKey, generated_1.AndroidFcmVersion.Legacy);
        log_1.default.succeed('Uploaded FCM API Key');
        return fcmFragment;
    }
}
exports.CreateFcm = CreateFcm;
