"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertHTMLToASCII = void 0;
const tslib_1 = require("tslib");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
// @ts-expect-error
const turndown_1 = tslib_1.__importDefault(require("turndown"));
const wrap_ansi_1 = tslib_1.__importDefault(require("wrap-ansi"));
const log_1 = require("../../../log");
const turndownServices = {};
function getService(rootUrl) {
    if (turndownServices[rootUrl]) {
        return turndownServices[rootUrl];
    }
    const turndownService = new turndown_1.default();
    turndownService.addRule('strikethrough', {
        filter: ['del', 's', 'strike'],
        replacement(content) {
            return chalk_1.default.strikethrough(content);
        },
    });
    turndownService.addRule('strong', {
        filter: ['strong', 'b'],
        replacement(content) {
            return chalk_1.default.bold(content);
        },
    });
    turndownService.addRule('emphasis', {
        filter: ['em', 'i'],
        replacement(content) {
            return chalk_1.default.italic(content);
        },
    });
    turndownService.addRule('heading', {
        filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],
        replacement(content) {
            return '\n' + chalk_1.default.bold(content) + '\n';
        },
    });
    turndownService.addRule('inlineLink', {
        filter(node, options) {
            return options.linkStyle === 'inlined' && node.nodeName === 'A' && node.getAttribute('href');
        },
        replacement(content, node) {
            let href = node.getAttribute('href');
            if (href.startsWith('/')) {
                href = `${rootUrl}${href}`;
            }
            return chalk_1.default.cyan((0, log_1.link)(href, { text: content }));
        },
    });
    turndownServices[rootUrl] = turndownService;
    return turndownService;
}
function convertHTMLToASCII({ content, rootUrl, }) {
    const service = getService(rootUrl);
    return (0, wrap_ansi_1.default)(service.turndown(content), process.stdout.columns || 80);
}
exports.convertHTMLToASCII = convertHTMLToASCII;
