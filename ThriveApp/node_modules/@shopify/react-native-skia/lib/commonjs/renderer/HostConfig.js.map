{"version":3,"names":["_constants","require","_renderHelpers","_HostComponents","_typeddash","DEBUG","debug","args","console","log","exports","appendNode","parent","child","addChild","removeNode","unbindReanimatedNode","removeChild","insertBefore","before","insertChildBefore","skHostConfig","now","Date","supportsMutation","isPrimaryRenderer","supportsPersistence","supportsHydration","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","appendChildToContainer","container","root","appendChild","getRootHostContext","_rootContainerInstance","getChildHostContext","_parentHostContext","_type","shouldSetTextContent","_props","createTextInstance","_text","_hostContext","_internalInstanceHandle","Error","createInstance","type","pristineProps","props","reanimatedProps","extractReanimatedProps","node","createNode","bindReanimatedProps","appendInitialChild","parentInstance","finalizeInitialChildren","commitMount","prepareForCommit","_containerInfo","resetAfterCommit","redraw","getPublicInstance","prepareUpdate","_instance","oldProps","newProps","rootContainerInstance","propsAreEqual","shallowEq","commitUpdate","instance","updatePayload","prevProps","nextProps","_internalHandle","setProps","commitTextUpdate","_textInstance","_oldText","_newText","clearContainer","children","forEach","preparePortalMount","removeChildFromContainer","insertInContainerBefore","getCurrentEventPriority","DefaultEventPriority","beforeActiveInstanceBlur","afterActiveInstanceBlur","detachDeletedInstance"],"sources":["HostConfig.ts"],"sourcesContent":["/*global NodeJS*/\nimport type { HostConfig } from \"react-reconciler\";\nimport { DefaultEventPriority } from \"react-reconciler/constants\";\n\nimport type { NodeType, Node } from \"../dom/types\";\nimport {\n  bindReanimatedProps,\n  extractReanimatedProps,\n  unbindReanimatedNode,\n} from \"../external/reanimated/renderHelpers\";\n\nimport type { Container } from \"./Container\";\nimport { createNode } from \"./HostComponents\";\nimport { shallowEq } from \"./typeddash\";\n\nconst DEBUG = false;\nexport const debug = (...args: Parameters<typeof console.log>) => {\n  if (DEBUG) {\n    console.log(...args);\n  }\n};\n\ntype Instance = Node<unknown>;\n\ntype Props = object;\ntype TextInstance = Node<unknown>;\ntype SuspenseInstance = Instance;\ntype HydratableInstance = Instance;\ntype PublicInstance = Instance;\ntype HostContext = null;\ntype UpdatePayload = Container;\ntype ChildSet = unknown;\ntype TimeoutHandle = NodeJS.Timeout;\ntype NoTimeout = -1;\n\ntype SkiaHostConfig = HostConfig<\n  NodeType,\n  Props,\n  Container,\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  HydratableInstance,\n  PublicInstance,\n  HostContext,\n  UpdatePayload,\n  ChildSet,\n  TimeoutHandle,\n  NoTimeout\n>;\n\nconst appendNode = (parent: Node<unknown>, child: Node<unknown>) => {\n  parent.addChild(child);\n};\n\nconst removeNode = (parent: Node<unknown>, child: Node<unknown>) => {\n  unbindReanimatedNode(child);\n  return parent.removeChild(child);\n};\n\nconst insertBefore = (\n  parent: Node<unknown>,\n  child: Node<unknown>,\n  before: Node<unknown>\n) => {\n  parent.insertChildBefore(child, before);\n};\n\nexport const skHostConfig: SkiaHostConfig = {\n  /**\n   * This function is used by the reconciler in order to calculate current time for prioritising work.\n   */\n  now: Date.now,\n  supportsMutation: true,\n  isPrimaryRenderer: false,\n  supportsPersistence: false,\n  supportsHydration: false,\n  //supportsMicrotask: true,\n\n  scheduleTimeout: setTimeout,\n  cancelTimeout: clearTimeout,\n  noTimeout: -1,\n\n  appendChildToContainer(container, child) {\n    debug(\"appendChildToContainer\");\n    appendNode(container.root, child);\n  },\n\n  appendChild(parent, child) {\n    debug(\"appendChild\", parent, child);\n    appendNode(parent, child);\n  },\n\n  getRootHostContext: (_rootContainerInstance: Container) => {\n    debug(\"getRootHostContext\");\n    return null;\n  },\n\n  getChildHostContext(_parentHostContext, _type, _rootContainerInstance) {\n    debug(\"getChildHostContext\");\n    return null;\n  },\n\n  shouldSetTextContent(_type, _props) {\n    return false;\n  },\n\n  createTextInstance(\n    _text,\n    _rootContainerInstance,\n    _hostContext,\n    _internalInstanceHandle\n  ) {\n    debug(\"createTextInstance\");\n    // return SpanNode({}, text) as SkNode;\n    throw new Error(\"Text nodes are not supported yet\");\n  },\n\n  createInstance(\n    type,\n    pristineProps,\n    container,\n    _hostContext,\n    _internalInstanceHandle\n  ) {\n    debug(\"createInstance\", type);\n    const [props, reanimatedProps] = extractReanimatedProps(pristineProps);\n    const node = createNode(container, type, props);\n    bindReanimatedProps(container, node, reanimatedProps);\n    return node;\n  },\n\n  appendInitialChild(parentInstance, child) {\n    debug(\"appendInitialChild\");\n    appendNode(parentInstance, child);\n  },\n\n  finalizeInitialChildren(\n    parentInstance,\n    _type,\n    _props,\n    _rootContainerInstance,\n    _hostContext\n  ) {\n    debug(\"finalizeInitialChildren\", parentInstance);\n    return false;\n  },\n\n  commitMount() {\n    // if finalizeInitialChildren = true\n    debug(\"commitMount\");\n  },\n\n  prepareForCommit(_containerInfo) {\n    debug(\"prepareForCommit\");\n    return null;\n  },\n\n  resetAfterCommit(container) {\n    debug(\"resetAfterCommit\");\n    container.redraw();\n  },\n\n  getPublicInstance(node: Instance) {\n    debug(\"getPublicInstance\");\n    return node;\n  },\n\n  prepareUpdate: (\n    _instance,\n    type,\n    oldProps,\n    newProps,\n    rootContainerInstance,\n    _hostContext\n  ) => {\n    debug(\"prepareUpdate\");\n    const propsAreEqual = shallowEq(oldProps, newProps);\n    if (propsAreEqual) {\n      return null;\n    }\n    debug(\"update \", type);\n    return rootContainerInstance;\n  },\n\n  commitUpdate(\n    instance,\n    updatePayload,\n    type,\n    prevProps,\n    nextProps,\n    _internalHandle\n  ) {\n    debug(\"commitUpdate: \", type);\n    if (shallowEq(prevProps, nextProps)) {\n      return;\n    }\n    const [props, reanimatedProps] = extractReanimatedProps(nextProps);\n    instance.setProps(props);\n    bindReanimatedProps(updatePayload, instance, reanimatedProps);\n  },\n\n  commitTextUpdate: (\n    _textInstance: TextInstance,\n    _oldText: string,\n    _newText: string\n  ) => {\n    //  textInstance.instance = newText;\n  },\n\n  clearContainer: (container) => {\n    debug(\"clearContainer\");\n    container.root.children().forEach((child) => {\n      container.root.removeChild(child);\n    });\n  },\n\n  preparePortalMount: () => {\n    debug(\"preparePortalMount\");\n  },\n\n  removeChild: (parent, child) => {\n    removeNode(parent, child);\n  },\n\n  removeChildFromContainer: (container, child) => {\n    removeNode(container.root, child);\n  },\n\n  insertInContainerBefore: (container, child, before) => {\n    insertBefore(container.root, child, before);\n  },\n\n  insertBefore: (parent, child, before) => {\n    insertBefore(parent, child, before);\n  },\n  // see https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r916356874\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  getCurrentEventPriority: () => DefaultEventPriority,\n  beforeActiveInstanceBlur: () => {},\n  afterActiveInstanceBlur: () => {},\n  detachDeletedInstance: () => {},\n};\n"],"mappings":"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"}