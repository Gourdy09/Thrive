{"version":3,"names":["_types","require","_Node","_types2","_datatypes","ShaderDeclaration","JsiDeclarationNode","constructor","ctx","type","props","DeclarationType","Shader","exports","ShaderNode","NodeType","decorate","decorateChildren","source","uniforms","transform","m3","Skia","Matrix","processTransformProps","shader","makeShaderWithChildren","processUniforms","shaders","popAll","push","ImageShaderNode","ImageShader","fit","image","tx","ty","fm","mm","imageShaderProps","rct","getRect","rects","fitRects","x","y","width","height","sx","sy","rect2rect","src","dst","translate","translateX","translateY","scale","scaleX","scaleY","lm","concat","makeShaderOptions","TileMode","enumKey","FilterMode","MipmapMode","ColorNode","ColorShader","color","MakeColor","Color","TurbulenceNode","Turbulence","freqX","freqY","octaves","seed","tileWidth","tileHeight","MakeTurbulence","FractalNoiseNode","FractalNoise","MakeFractalNoise","LinearGradientNode","LinearGradient","start","end","colors","positions","mode","localMatrix","flags","processGradientProps","MakeLinearGradient","RadialGradientNode","RadialGradient","c","r","MakeRadialGradient","SweepGradientNode","SweepGradient","MakeSweepGradient","TwoPointConicalGradientNode","TwoPointConicalGradient","startR","endR","MakeTwoPointConicalGradient"],"sources":["Shaders.ts"],"sourcesContent":["import {\n  processUniforms,\n  FilterMode,\n  MipmapMode,\n  TileMode,\n} from \"../../../skia/types\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\nimport type {\n  ColorProps,\n  DeclarationContext,\n  FractalNoiseProps,\n  ImageShaderProps,\n  LinearGradientProps,\n  RadialGradientProps,\n  ShaderProps,\n  SweepGradientProps,\n  TurbulenceProps,\n  TwoPointConicalGradientProps,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport {\n  enumKey,\n  fitRects,\n  getRect,\n  processGradientProps,\n  processTransformProps,\n  rect2rect,\n} from \"../datatypes\";\n\nexport abstract class ShaderDeclaration<P> extends JsiDeclarationNode<P> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.Shader, type, props);\n  }\n}\n\nexport class ShaderNode extends ShaderDeclaration<ShaderProps> {\n  constructor(ctx: NodeContext, props: ShaderProps) {\n    super(ctx, NodeType.Shader, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    this.decorateChildren(ctx);\n    const { source, uniforms, ...transform } = this.props;\n    const m3 = this.Skia.Matrix();\n    processTransformProps(m3, transform);\n    const shader = source.makeShaderWithChildren(\n      processUniforms(source, uniforms),\n      ctx.shaders.popAll(),\n      m3\n    );\n    ctx.shaders.push(shader);\n  }\n}\n\nexport class ImageShaderNode extends ShaderDeclaration<ImageShaderProps> {\n  constructor(ctx: NodeContext, props: ImageShaderProps) {\n    super(ctx, NodeType.ImageShader, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { fit, image, tx, ty, fm, mm, ...imageShaderProps } = this.props;\n    if (!image) {\n      return;\n    }\n\n    const rct = getRect(this.Skia, imageShaderProps);\n    const m3 = this.Skia.Matrix();\n    if (rct) {\n      const rects = fitRects(\n        fit,\n        { x: 0, y: 0, width: image.width(), height: image.height() },\n        rct\n      );\n      const [x, y, sx, sy] = rect2rect(rects.src, rects.dst);\n      m3.translate(x.translateX, y.translateY);\n      m3.scale(sx.scaleX, sy.scaleY);\n    }\n    const lm = this.Skia.Matrix();\n    lm.concat(m3);\n    processTransformProps(lm, imageShaderProps);\n    const shader = image.makeShaderOptions(\n      TileMode[enumKey(tx)],\n      TileMode[enumKey(ty)],\n      FilterMode[enumKey(fm)],\n      MipmapMode[enumKey(mm)],\n      lm\n    );\n    ctx.shaders.push(shader);\n  }\n}\n\nexport class ColorNode extends ShaderDeclaration<ColorProps> {\n  constructor(ctx: NodeContext, props: ColorProps) {\n    super(ctx, NodeType.ColorShader, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { color } = this.props;\n    const shader = this.Skia.Shader.MakeColor(this.Skia.Color(color));\n    ctx.shaders.push(shader);\n  }\n}\n\nexport class TurbulenceNode extends ShaderDeclaration<TurbulenceProps> {\n  constructor(ctx: NodeContext, props: TurbulenceProps) {\n    super(ctx, NodeType.Turbulence, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { freqX, freqY, octaves, seed, tileWidth, tileHeight } = this.props;\n    const shader = this.Skia.Shader.MakeTurbulence(\n      freqX,\n      freqY,\n      octaves,\n      seed,\n      tileWidth,\n      tileHeight\n    );\n    ctx.shaders.push(shader);\n  }\n}\n\nexport class FractalNoiseNode extends ShaderDeclaration<FractalNoiseProps> {\n  constructor(ctx: NodeContext, props: FractalNoiseProps) {\n    super(ctx, NodeType.FractalNoise, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { freqX, freqY, octaves, seed, tileWidth, tileHeight } = this.props;\n    const shader = this.Skia.Shader.MakeFractalNoise(\n      freqX,\n      freqY,\n      octaves,\n      seed,\n      tileWidth,\n      tileHeight\n    );\n    ctx.shaders.push(shader);\n  }\n}\n\nexport class LinearGradientNode extends ShaderDeclaration<LinearGradientProps> {\n  constructor(ctx: NodeContext, props: LinearGradientProps) {\n    super(ctx, NodeType.LinearGradient, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { start, end } = this.props;\n    const { colors, positions, mode, localMatrix, flags } =\n      processGradientProps(this.Skia, this.props);\n    const shader = this.Skia.Shader.MakeLinearGradient(\n      start,\n      end,\n      colors,\n      positions ?? null,\n      mode,\n      localMatrix,\n      flags\n    );\n    ctx.shaders.push(shader);\n  }\n}\n\nexport class RadialGradientNode extends ShaderDeclaration<RadialGradientProps> {\n  constructor(ctx: NodeContext, props: RadialGradientProps) {\n    super(ctx, NodeType.RadialGradient, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { c, r } = this.props;\n    const { colors, positions, mode, localMatrix, flags } =\n      processGradientProps(this.Skia, this.props);\n    const shader = this.Skia.Shader.MakeRadialGradient(\n      c,\n      r,\n      colors,\n      positions,\n      mode,\n      localMatrix,\n      flags\n    );\n    ctx.shaders.push(shader);\n  }\n}\n\nexport class SweepGradientNode extends ShaderDeclaration<SweepGradientProps> {\n  constructor(ctx: NodeContext, props: SweepGradientProps) {\n    super(ctx, NodeType.SweepGradient, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { c, start, end } = this.props;\n    const { colors, positions, mode, localMatrix, flags } =\n      processGradientProps(this.Skia, this.props);\n    const shader = this.Skia.Shader.MakeSweepGradient(\n      c.x,\n      c.y,\n      colors,\n      positions,\n      mode,\n      localMatrix,\n      flags,\n      start,\n      end\n    );\n    ctx.shaders.push(shader);\n  }\n}\n\nexport class TwoPointConicalGradientNode extends ShaderDeclaration<TwoPointConicalGradientProps> {\n  constructor(ctx: NodeContext, props: TwoPointConicalGradientProps) {\n    super(ctx, NodeType.TwoPointConicalGradient, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { startR, endR, start, end } = this.props;\n    const { colors, positions, mode, localMatrix, flags } =\n      processGradientProps(this.Skia, this.props);\n    const shader = this.Skia.Shader.MakeTwoPointConicalGradient(\n      start,\n      startR,\n      end,\n      endR,\n      colors,\n      positions,\n      mode,\n      localMatrix,\n      flags\n    );\n    ctx.shaders.push(shader);\n  }\n}\n"],"mappings":"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"}