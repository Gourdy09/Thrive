{"version":3,"names":["_types","require","_types2","_datatypes","_Node","Black","Float32Array","of","MakeInnerShadow","Skia","shadowOnly","dx","dy","sigmaX","sigmaY","color","input","sourceGraphic","ImageFilter","MakeColorFilter","ColorFilter","MakeBlend","BlendMode","Dst","sourceAlpha","SrcIn","f1","SrcOut","f2","MakeOffset","f3","MakeBlur","TileMode","Decal","f4","MakeCompose","SrcOver","ImageFilterDeclaration","JsiDeclarationNode","constructor","ctx","type","props","DeclarationType","_ctx$imageFilters$pop","imageFilters","pop","composeAndPush","imgf1","save","decorateChildren","imgf2","popAllAsOne","cf","colorFilters","restore","_imgf","imgf","push","exports","OffsetImageFilterNode","NodeType","OffsetImageFilter","decorate","x","y","DisplacementMapImageFilterNode","DisplacementMapImageFilter","channelX","channelY","scale","shader","shaders","Error","map","MakeShader","MakeDisplacementMap","ColorChannel","enumKey","BlurImageFilterNode","BlurImageFilter","mode","blur","sigma","processRadius","DropShadowImageFilterNode","DropShadowImageFilter","cl","inner","Color","factory","bind","MakeDropShadowOnly","MakeDropShadow","MorphologyOperator","MorphologyImageFilterNode","MorphologyImageFilter","operator","r","radius","Erode","MakeErode","MakeDilate","BlendImageFilterNode","BlendImageFilter","a","b","RuntimeShaderImageFilterNode","RuntimeShaderImageFilter","source","uniforms","rtb","RuntimeShaderBuilder","processUniforms","MakeRuntimeShader"],"sources":["ImageFilters.ts"],"sourcesContent":["import type { SkImageFilter, SkColor, Skia } from \"../../../skia/types\";\nimport {\n  BlendMode,\n  ColorChannel,\n  processUniforms,\n  TileMode,\n} from \"../../../skia/types\";\nimport type {\n  BlendImageFilterProps,\n  BlurImageFilterProps,\n  DeclarationContext,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  MorphologyImageFilterProps,\n  OffsetImageFilterProps,\n  RuntimeShaderImageFilterProps,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport { processRadius, enumKey } from \"../datatypes\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\n\nconst Black = Float32Array.of(0, 0, 0, 1);\n\nconst MakeInnerShadow = (\n  Skia: Skia,\n  shadowOnly: boolean | undefined,\n  dx: number,\n  dy: number,\n  sigmaX: number,\n  sigmaY: number,\n  color: SkColor,\n  input: SkImageFilter | null\n) => {\n  const sourceGraphic = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.Dst),\n    null\n  );\n  const sourceAlpha = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.SrcIn),\n    null\n  );\n  const f1 = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(color, BlendMode.SrcOut),\n    null\n  );\n  const f2 = Skia.ImageFilter.MakeOffset(dx, dy, f1);\n  const f3 = Skia.ImageFilter.MakeBlur(sigmaX, sigmaY, TileMode.Decal, f2);\n  const f4 = Skia.ImageFilter.MakeBlend(BlendMode.SrcIn, sourceAlpha, f3);\n  if (shadowOnly) {\n    return f4;\n  }\n  return Skia.ImageFilter.MakeCompose(\n    input,\n    Skia.ImageFilter.MakeBlend(BlendMode.SrcOver, sourceGraphic, f4)\n  );\n};\n\nexport abstract class ImageFilterDeclaration<P> extends JsiDeclarationNode<P> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.ImageFilter, type, props);\n  }\n\n  protected input(ctx: DeclarationContext) {\n    return ctx.imageFilters.pop() ?? null;\n  }\n\n  protected composeAndPush(ctx: DeclarationContext, imgf1: SkImageFilter) {\n    ctx.save();\n    this.decorateChildren(ctx);\n    let imgf2 = ctx.imageFilters.popAllAsOne();\n    const cf = ctx.colorFilters.popAllAsOne();\n    ctx.restore();\n    if (cf) {\n      imgf2 = this.Skia.ImageFilter.MakeCompose(\n        imgf2 ?? null,\n        this.Skia.ImageFilter.MakeColorFilter(cf, null)\n      );\n    }\n    const imgf = imgf2\n      ? this.Skia.ImageFilter.MakeCompose(imgf1, imgf2)\n      : imgf1;\n    ctx.imageFilters.push(imgf);\n  }\n}\n\nexport class OffsetImageFilterNode extends ImageFilterDeclaration<OffsetImageFilterProps> {\n  constructor(ctx: NodeContext, props: OffsetImageFilterProps) {\n    super(ctx, NodeType.OffsetImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    this.decorateChildren(ctx);\n    const { x, y } = this.props;\n    const imgf = this.Skia.ImageFilter.MakeOffset(x, y, null);\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport class DisplacementMapImageFilterNode extends ImageFilterDeclaration<DisplacementMapImageFilterProps> {\n  constructor(ctx: NodeContext, props: DisplacementMapImageFilterProps) {\n    super(ctx, NodeType.DisplacementMapImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    this.decorateChildren(ctx);\n    const { channelX, channelY, scale } = this.props;\n    const shader = ctx.shaders.pop();\n    if (!shader) {\n      throw new Error(\"DisplacementMap expects a shader as child\");\n    }\n    const map = this.Skia.ImageFilter.MakeShader(shader, null);\n    const imgf = this.Skia.ImageFilter.MakeDisplacementMap(\n      ColorChannel[enumKey(channelX)],\n      ColorChannel[enumKey(channelY)],\n      scale,\n      map,\n      this.input(ctx)\n    );\n    ctx.imageFilters.push(imgf);\n  }\n}\n\nexport class BlurImageFilterNode extends ImageFilterDeclaration<BlurImageFilterProps> {\n  constructor(ctx: NodeContext, props: BlurImageFilterProps) {\n    super(ctx, NodeType.BlurImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { mode, blur } = this.props;\n    const sigma = processRadius(this.Skia, blur);\n    const imgf = this.Skia.ImageFilter.MakeBlur(\n      sigma.x,\n      sigma.y,\n      TileMode[enumKey(mode)],\n      this.input(ctx)\n    );\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport class DropShadowImageFilterNode extends ImageFilterDeclaration<DropShadowImageFilterProps> {\n  constructor(ctx: NodeContext, props: DropShadowImageFilterProps) {\n    super(ctx, NodeType.DropShadowImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { dx, dy, blur, shadowOnly, color: cl, inner } = this.props;\n    const color = this.Skia.Color(cl);\n    let factory;\n    if (inner) {\n      factory = MakeInnerShadow.bind(null, this.Skia, shadowOnly);\n    } else {\n      factory = shadowOnly\n        ? this.Skia.ImageFilter.MakeDropShadowOnly.bind(this.Skia.ImageFilter)\n        : this.Skia.ImageFilter.MakeDropShadow.bind(this.Skia.ImageFilter);\n    }\n    const imgf = factory(dx, dy, blur, blur, color, this.input(ctx));\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport enum MorphologyOperator {\n  Erode,\n  Dilate,\n}\n\nexport class MorphologyImageFilterNode extends ImageFilterDeclaration<MorphologyImageFilterProps> {\n  constructor(ctx: NodeContext, props: MorphologyImageFilterProps) {\n    super(ctx, NodeType.MorphologyImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { operator } = this.props;\n    const r = processRadius(this.Skia, this.props.radius);\n    let imgf;\n    if (MorphologyOperator[enumKey(operator)] === MorphologyOperator.Erode) {\n      imgf = this.Skia.ImageFilter.MakeErode(r.x, r.y, this.input(ctx));\n    } else {\n      imgf = this.Skia.ImageFilter.MakeDilate(r.x, r.y, this.input(ctx));\n    }\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport class BlendImageFilterNode extends ImageFilterDeclaration<BlendImageFilterProps> {\n  constructor(ctx: NodeContext, props: BlendImageFilterProps) {\n    super(ctx, NodeType.BlendImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { mode } = this.props;\n    const a = ctx.imageFilters.pop();\n    const b = ctx.imageFilters.pop();\n    if (!a || !b) {\n      throw new Error(\"BlendImageFilter requires two image filters\");\n    }\n    const imgf = this.Skia.ImageFilter.MakeBlend(mode, a, b);\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport class RuntimeShaderImageFilterNode extends ImageFilterDeclaration<RuntimeShaderImageFilterProps> {\n  constructor(ctx: NodeContext, props: RuntimeShaderImageFilterProps) {\n    super(ctx, NodeType.RuntimeShaderImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { source, uniforms } = this.props;\n    const rtb = this.Skia.RuntimeShaderBuilder(source);\n    if (uniforms) {\n      processUniforms(source, uniforms, rtb);\n    }\n    const imgf = this.Skia.ImageFilter.MakeRuntimeShader(\n      rtb,\n      null,\n      this.input(ctx)\n    );\n    this.composeAndPush(ctx, imgf);\n  }\n}\n"],"mappings":"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"}