{"version":3,"names":["_types","require","_types2","_DrawingNode","_datatypes","AtlasNode","JsiDrawingNode","deriveProps","constructor","ctx","props","NodeType","Atlas","draw","canvas","paint","image","sprites","transforms","colors","blendMode","blend","BlendMode","enumKey","undefined","drawAtlas","exports"],"sources":["AtlasNode.ts"],"sourcesContent":["import { BlendMode } from \"../../../skia/types\";\nimport type { AtlasProps, DrawingContext } from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport { JsiDrawingNode } from \"../DrawingNode\";\nimport type { NodeContext } from \"../Node\";\nimport { enumKey } from \"../datatypes\";\n\nexport class AtlasNode extends JsiDrawingNode<AtlasProps, null> {\n  protected deriveProps() {\n    return null;\n  }\n\n  constructor(ctx: NodeContext, props: AtlasProps) {\n    super(ctx, NodeType.Atlas, props);\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    const { image, sprites, transforms, colors, blendMode } = this.props;\n    const blend = blendMode ? BlendMode[enumKey(blendMode)] : undefined;\n    if (image) {\n      canvas.drawAtlas(image, sprites, transforms, paint, blend, colors);\n    }\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AAEA,IAAAG,UAAA,GAAAH,OAAA;AAEO,MAAMI,SAAS,SAASC,2BAAc,CAAmB;EACpDC,WAAWA,CAAA,EAAG;IACtB,OAAO,IAAI;EACb;EAEAC,WAAWA,CAACC,GAAgB,EAAEC,KAAiB,EAAE;IAC/C,KAAK,CAACD,GAAG,EAAEE,gBAAQ,CAACC,KAAK,EAAEF,KAAK,CAAC;EACnC;EAEAG,IAAIA,CAAC;IAAEC,MAAM;IAAEC;EAAsB,CAAC,EAAE;IACtC,MAAM;MAAEC,KAAK;MAAEC,OAAO;MAAEC,UAAU;MAAEC,MAAM;MAAEC;IAAU,CAAC,GAAG,IAAI,CAACV,KAAK;IACpE,MAAMW,KAAK,GAAGD,SAAS,GAAGE,gBAAS,CAAC,IAAAC,kBAAO,EAACH,SAAS,CAAC,CAAC,GAAGI,SAAS;IACnE,IAAIR,KAAK,EAAE;MACTF,MAAM,CAACW,SAAS,CAACT,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEH,KAAK,EAAEM,KAAK,EAAEF,MAAM,CAAC;IACpE;EACF;AACF;AAACO,OAAA,CAAArB,SAAA,GAAAA,SAAA"}