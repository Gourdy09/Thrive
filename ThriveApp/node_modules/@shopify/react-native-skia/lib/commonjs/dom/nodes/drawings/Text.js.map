{"version":3,"names":["_types","require","_datatypes","_DrawingNode","TextNode","JsiDrawingNode","constructor","ctx","props","NodeType","Text","deriveProps","font","draw","canvas","paint","text","x","y","derived","undefined","Error","drawText","exports","TextPathNode","TextPath","path","processPath","Skia","initialOffset","ids","getGlyphIDs","widths","getGlyphWidths","rsx","meas","ContourMeasureIter","cont","next","dist","i","length","width","substring","p","t","getPosTan","adjustedX","adjustedY","push","RSXform","TextBlob","MakeFromRSXform","drawTextBlob","TextBlobNode","blob","GlyphsNode","Glyphs","glyphs","reduce","acc","glyph","id","pos","positions","drawGlyphs"],"sources":["Text.ts"],"sourcesContent":["import type {\n  SkRSXform,\n  SkTextBlob,\n  SkPoint,\n  SkFont,\n} from \"../../../skia/types\";\nimport type {\n  DrawingContext,\n  TextBlobProps,\n  TextPathProps,\n  TextProps,\n} from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport { processPath } from \"../datatypes\";\nimport type { GlyphsProps } from \"../../types/Drawings\";\nimport { JsiDrawingNode } from \"../DrawingNode\";\nimport type { NodeContext } from \"../Node\";\n\nexport class TextNode extends JsiDrawingNode<TextProps, SkFont | null> {\n  constructor(ctx: NodeContext, props: TextProps) {\n    super(ctx, NodeType.Text, props);\n  }\n\n  protected deriveProps() {\n    const { font } = this.props;\n    if (!font) {\n      return null;\n    }\n    return font;\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    const { text, x, y } = this.props;\n    const font = this.derived;\n    if (font === undefined) {\n      throw new Error(\"TextNode: font hasn't been derived\");\n    }\n    if (font != null) {\n      canvas.drawText(text, x, y, paint, font);\n    }\n  }\n}\n\nexport class TextPathNode extends JsiDrawingNode<\n  TextPathProps,\n  SkTextBlob | null\n> {\n  constructor(ctx: NodeContext, props: TextPathProps) {\n    super(ctx, NodeType.TextPath, props);\n  }\n\n  deriveProps() {\n    const path = processPath(this.Skia, this.props.path);\n    const { font, initialOffset } = this.props;\n    if (!font) {\n      return null;\n    }\n    let { text } = this.props;\n    const ids = font.getGlyphIDs(text);\n    const widths = font.getGlyphWidths(ids);\n    const rsx: SkRSXform[] = [];\n    const meas = this.Skia.ContourMeasureIter(path, false, 1);\n    let cont = meas.next();\n    let dist = initialOffset;\n    for (let i = 0; i < text.length && cont; i++) {\n      const width = widths[i];\n      dist += width / 2;\n      if (dist > cont.length()) {\n        // jump to next contour\n        cont = meas.next();\n        if (!cont) {\n          // We have come to the end of the path - terminate the string\n          // right here.\n          text = text.substring(0, i);\n          break;\n        }\n        dist = width / 2;\n      }\n      // Gives us the (x, y) coordinates as well as the cos/sin of the tangent\n      // line at that position.\n      const [p, t] = cont.getPosTan(dist);\n      const adjustedX = p.x - (width / 2) * t.x;\n      const adjustedY = p.y - (width / 2) * t.y;\n      rsx.push(this.Skia.RSXform(t.x, t.y, adjustedX, adjustedY));\n      dist += width / 2;\n    }\n    return this.Skia.TextBlob.MakeFromRSXform(text, rsx, font);\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    if (!this.derived) {\n      throw new Error(\"TextPathNode: blob is null\");\n    }\n    canvas.drawTextBlob(this.derived, 0, 0, paint);\n  }\n}\n\nexport class TextBlobNode extends JsiDrawingNode<TextBlobProps, null> {\n  constructor(ctx: NodeContext, props: TextBlobProps) {\n    super(ctx, NodeType.TextBlob, props);\n  }\n\n  protected deriveProps() {\n    return null;\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    const { blob, x, y } = this.props;\n    canvas.drawTextBlob(blob, x, y, paint);\n  }\n}\n\ninterface ProcessedGlyphs {\n  glyphs: number[];\n  positions: SkPoint[];\n}\n\nexport class GlyphsNode extends JsiDrawingNode<GlyphsProps, ProcessedGlyphs> {\n  constructor(ctx: NodeContext, props: GlyphsProps) {\n    super(ctx, NodeType.Glyphs, props);\n  }\n\n  deriveProps() {\n    return this.props.glyphs.reduce<ProcessedGlyphs>(\n      (acc, glyph) => {\n        const { id, pos } = glyph;\n        acc.glyphs.push(id);\n        acc.positions.push(pos);\n        return acc;\n      },\n      { glyphs: [], positions: [] }\n    );\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    if (!this.derived) {\n      throw new Error(\"GlyphsNode: processedGlyphs is null\");\n    }\n    const { glyphs, positions } = this.derived;\n    const { x, y, font } = this.props;\n    if (font) {\n      canvas.drawGlyphs(glyphs, positions, x, y, font, paint);\n    }\n  }\n}\n"],"mappings":"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"}