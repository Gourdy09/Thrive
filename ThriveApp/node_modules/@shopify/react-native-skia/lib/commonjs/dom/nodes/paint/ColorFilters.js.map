{"version":3,"names":["_types","require","_Node","_types2","_Enum","ColorFilterDeclaration","JsiDeclarationNode","constructor","ctx","type","props","DeclarationType","ColorFilter","composeAndPush","cf1","save","decorateChildren","cf2","colorFilters","popAllAsOne","restore","cf","Skia","MakeCompose","push","exports","MatrixColorFilterNode","NodeType","MatrixColorFilter","decorate","matrix","MakeMatrix","BlendColorFilterNode","BlendColorFilter","mode","color","Color","MakeBlend","BlendMode","enumKey","LinearToSRGBGammaColorFilterNode","LinearToSRGBGammaColorFilter","MakeLinearToSRGBGamma","SRGBToLinearGammaColorFilterNode","SRGBToLinearGammaColorFilter","MakeSRGBToLinearGamma","LumaColorFilterNode","LumaColorFilter","MakeLumaColorFilter","LerpColorFilterNode","LerpColorFilter","t","second","pop","first","Error","MakeLerp"],"sources":["ColorFilters.ts"],"sourcesContent":["import type { SkColorFilter } from \"../../../skia/types\";\nimport { BlendMode } from \"../../../skia/types\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\nimport type {\n  BlendColorFilterProps,\n  MatrixColorFilterProps,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport { enumKey } from \"../datatypes/Enum\";\nimport type { LerpColorFilterProps } from \"../../types/ColorFilters\";\nimport type { DeclarationContext } from \"../../types/DeclarationContext\";\n\nexport abstract class ColorFilterDeclaration<P> extends JsiDeclarationNode<P> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.ColorFilter, type, props);\n  }\n\n  protected composeAndPush(ctx: DeclarationContext, cf1: SkColorFilter) {\n    ctx.save();\n    this.decorateChildren(ctx);\n    const cf2 = ctx.colorFilters.popAllAsOne();\n    ctx.restore();\n    const cf = cf2 ? this.Skia.ColorFilter.MakeCompose(cf1, cf2) : cf1;\n    ctx.colorFilters.push(cf);\n  }\n}\n\nexport class MatrixColorFilterNode extends ColorFilterDeclaration<MatrixColorFilterProps> {\n  constructor(ctx: NodeContext, props: MatrixColorFilterProps) {\n    super(ctx, NodeType.MatrixColorFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { matrix } = this.props;\n    const cf = this.Skia.ColorFilter.MakeMatrix(matrix);\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class BlendColorFilterNode extends ColorFilterDeclaration<BlendColorFilterProps> {\n  constructor(ctx: NodeContext, props: BlendColorFilterProps) {\n    super(ctx, NodeType.BlendColorFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { mode } = this.props;\n    const color = this.Skia.Color(this.props.color);\n    const cf = this.Skia.ColorFilter.MakeBlend(color, BlendMode[enumKey(mode)]);\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class LinearToSRGBGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LinearToSRGBGammaColorFilter, null);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const cf = this.Skia.ColorFilter.MakeLinearToSRGBGamma();\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class SRGBToLinearGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.SRGBToLinearGammaColorFilter, null);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const cf = this.Skia.ColorFilter.MakeSRGBToLinearGamma();\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class LumaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LumaColorFilter, null);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const cf = this.Skia.ColorFilter.MakeLumaColorFilter();\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class LerpColorFilterNode extends ColorFilterDeclaration<LerpColorFilterProps> {\n  constructor(ctx: NodeContext, props: LerpColorFilterProps) {\n    super(ctx, NodeType.LerpColorFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    ctx.save();\n    this.decorateChildren(ctx);\n    const { t } = this.props;\n    const second = ctx.colorFilters.pop();\n    const first = ctx.colorFilters.pop();\n    ctx.restore();\n    if (!first || !second) {\n      throw new Error(\n        \"LerpColorFilterNode: missing two color filters as children\"\n      );\n    }\n    ctx.colorFilters.push(this.Skia.ColorFilter.MakeLerp(t, first, second));\n  }\n}\n"],"mappings":"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"}