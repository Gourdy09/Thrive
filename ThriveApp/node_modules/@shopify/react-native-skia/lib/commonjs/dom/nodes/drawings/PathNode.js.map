{"version":3,"names":["_math","require","_types","_types2","_datatypes","_DrawingNode","PathNode","JsiDrawingNode","constructor","ctx","props","NodeType","Path","deriveProps","start","trimStart","end","trimEnd","fillType","stroke","pathProps","saturate","hasStartOffset","hasEndOffset","hasStrokeOptions","undefined","hasFillType","willMutatePath","pristinePath","processPath","Skia","path","copy","setFillType","FillType","enumKey","trim","draw","canvas","paint","derived","Error","drawPath","exports"],"sources":["PathNode.ts"],"sourcesContent":["import { saturate } from \"../../../renderer/processors/math\";\nimport { FillType } from \"../../../skia/types\";\nimport type { SkPath } from \"../../../skia/types\";\nimport type { DrawingContext, PathProps } from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport { enumKey, processPath } from \"../datatypes\";\nimport { JsiDrawingNode } from \"../DrawingNode\";\nimport type { NodeContext } from \"../Node\";\n\nexport class PathNode extends JsiDrawingNode<PathProps, SkPath> {\n  constructor(ctx: NodeContext, props: PathProps) {\n    super(ctx, NodeType.Path, props);\n  }\n\n  protected deriveProps() {\n    const {\n      start: trimStart,\n      end: trimEnd,\n      fillType,\n      stroke,\n      ...pathProps\n    } = this.props;\n    const start = saturate(trimStart);\n    const end = saturate(trimEnd);\n    const hasStartOffset = start !== 0;\n    const hasEndOffset = end !== 1;\n    const hasStrokeOptions = stroke !== undefined;\n    const hasFillType = !!fillType;\n    const willMutatePath =\n      hasStartOffset || hasEndOffset || hasStrokeOptions || hasFillType;\n    const pristinePath = processPath(this.Skia, pathProps.path);\n    const path = willMutatePath ? pristinePath.copy() : pristinePath;\n    if (hasFillType) {\n      path.setFillType(FillType[enumKey(fillType)]);\n    }\n    if (hasStrokeOptions) {\n      path.stroke(stroke);\n    }\n    if (hasStartOffset || hasEndOffset) {\n      path.trim(start, end, false);\n    }\n    return path;\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    if (!this.derived) {\n      throw new Error(\"Path not initialized\");\n    }\n    canvas.drawPath(this.derived, paint);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAGA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AAGO,MAAMK,QAAQ,SAASC,2BAAc,CAAoB;EAC9DC,WAAWA,CAACC,GAAgB,EAAEC,KAAgB,EAAE;IAC9C,KAAK,CAACD,GAAG,EAAEE,gBAAQ,CAACC,IAAI,EAAEF,KAAK,CAAC;EAClC;EAEUG,WAAWA,CAAA,EAAG;IACtB,MAAM;MACJC,KAAK,EAAEC,SAAS;MAChBC,GAAG,EAAEC,OAAO;MACZC,QAAQ;MACRC,MAAM;MACN,GAAGC;IACL,CAAC,GAAG,IAAI,CAACV,KAAK;IACd,MAAMI,KAAK,GAAG,IAAAO,cAAQ,EAACN,SAAS,CAAC;IACjC,MAAMC,GAAG,GAAG,IAAAK,cAAQ,EAACJ,OAAO,CAAC;IAC7B,MAAMK,cAAc,GAAGR,KAAK,KAAK,CAAC;IAClC,MAAMS,YAAY,GAAGP,GAAG,KAAK,CAAC;IAC9B,MAAMQ,gBAAgB,GAAGL,MAAM,KAAKM,SAAS;IAC7C,MAAMC,WAAW,GAAG,CAAC,CAACR,QAAQ;IAC9B,MAAMS,cAAc,GAClBL,cAAc,IAAIC,YAAY,IAAIC,gBAAgB,IAAIE,WAAW;IACnE,MAAME,YAAY,GAAG,IAAAC,sBAAW,EAAC,IAAI,CAACC,IAAI,EAAEV,SAAS,CAACW,IAAI,CAAC;IAC3D,MAAMA,IAAI,GAAGJ,cAAc,GAAGC,YAAY,CAACI,IAAI,CAAC,CAAC,GAAGJ,YAAY;IAChE,IAAIF,WAAW,EAAE;MACfK,IAAI,CAACE,WAAW,CAACC,eAAQ,CAAC,IAAAC,kBAAO,EAACjB,QAAQ,CAAC,CAAC,CAAC;IAC/C;IACA,IAAIM,gBAAgB,EAAE;MACpBO,IAAI,CAACZ,MAAM,CAACA,MAAM,CAAC;IACrB;IACA,IAAIG,cAAc,IAAIC,YAAY,EAAE;MAClCQ,IAAI,CAACK,IAAI,CAACtB,KAAK,EAAEE,GAAG,EAAE,KAAK,CAAC;IAC9B;IACA,OAAOe,IAAI;EACb;EAEAM,IAAIA,CAAC;IAAEC,MAAM;IAAEC;EAAsB,CAAC,EAAE;IACtC,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;MACjB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACAH,MAAM,CAACI,QAAQ,CAAC,IAAI,CAACF,OAAO,EAAED,KAAK,CAAC;EACtC;AACF;AAACI,OAAA,CAAArC,QAAA,GAAAA,QAAA"}