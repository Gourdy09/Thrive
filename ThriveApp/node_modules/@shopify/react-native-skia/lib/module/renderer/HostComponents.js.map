{"version":3,"names":["NodeType","exhaustiveCheck","shouldUseJSDomOnNative","NATIVE_DOM","global","SkiaDomApi","createNode","container","type","props","Sk","Layer","Group","Paint","Fill","Image","Circle","Path","Line","Oval","Patch","Points","Rect","RRect","Vertices","Text","TextPath","TextBlob","Glyphs","Atlas","DiffRect","Picture","ImageSVG","BlurMaskFilter","BlendImageFilter","BlurImageFilter","OffsetImageFilter","DropShadowImageFilter","DisplacementMapImageFilter","MorphologyImageFilter","RuntimeShaderImageFilter","MatrixColorFilter","BlendColorFilter","LerpColorFilter","LumaColorFilter","LinearToSRGBGammaColorFilter","SRGBToLinearGammaColorFilter","Shader","ImageShader","ColorShader","Turbulence","FractalNoise","LinearGradient","RadialGradient","SweepGradient","TwoPointConicalGradient","CornerPathEffect","DiscretePathEffect","DashPathEffect","Path1DPathEffect","Path2DPathEffect","SumPathEffect","Line2DPathEffect","Blend","BackdropFilter","Box","BoxShadow","Paragraph"],"sources":["HostComponents.ts"],"sourcesContent":["import { NodeType } from \"../dom/types\";\nimport type {\n  DeclarationNode,\n  FractalNoiseProps,\n  RenderNode,\n  CircleProps,\n  DrawingNodeProps,\n  ImageProps,\n  PaintProps,\n  PathProps,\n  LineProps,\n  OvalProps,\n  DiffRectProps,\n  PointsProps,\n  RectProps,\n  RoundedRectProps,\n  TextProps,\n  VerticesProps,\n  BlurMaskFilterProps,\n  BlendImageFilterProps,\n  BlurImageFilterProps,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  OffsetImageFilterProps,\n  RuntimeShaderImageFilterProps,\n  MatrixColorFilterProps,\n  ShaderProps,\n  ImageShaderProps,\n  LinearGradientProps,\n  GroupProps,\n  PatchProps,\n  BlendColorFilterProps,\n  DashPathEffectProps,\n  DiscretePathEffectProps,\n  CornerPathEffectProps,\n  Line2DPathEffectProps,\n  Path1DPathEffectProps,\n  Path2DPathEffectProps,\n  TextPathProps,\n  TextBlobProps,\n  GlyphsProps,\n  TwoPointConicalGradientProps,\n  TurbulenceProps,\n  SweepGradientProps,\n  RadialGradientProps,\n  ColorProps,\n  PictureProps,\n  ImageSVGProps,\n  LerpColorFilterProps,\n  BoxProps,\n  BoxShadowProps,\n  ParagraphProps,\n  AtlasProps,\n} from \"../dom/types\";\nimport type { ChildrenProps } from \"../dom/types/Common\";\nimport type {\n  BlendProps,\n  MorphologyImageFilterProps,\n} from \"../dom/types/ImageFilters\";\nimport type { SkRect, SkRRect } from \"../skia/types\";\nimport type { JsiDrawingNode } from \"../dom/nodes/DrawingNode\";\n\nimport type { Container } from \"./Container\";\nimport { exhaustiveCheck } from \"./typeddash\";\nimport type { SkiaProps } from \"./processors\";\n\n// This flag should only be turned on for debugging/testing\nconst shouldUseJSDomOnNative = false;\nexport const NATIVE_DOM = shouldUseJSDomOnNative ? false : !!global.SkiaDomApi;\n\ndeclare global {\n  var SkiaDomApi: {\n    RectNode: (props: RectProps) => JsiDrawingNode<RectProps, SkRect>;\n    RRectNode: (\n      props: RoundedRectProps\n    ) => JsiDrawingNode<RoundedRectProps, SkRRect>;\n    GroupNode: (props: GroupProps) => RenderNode<GroupProps>;\n    PaintNode: (props: PaintProps) => DeclarationNode<PaintProps>;\n    FillNode: (props: PaintProps) => RenderNode<PaintProps>;\n    CircleNode: (props: CircleProps) => RenderNode<CircleProps>;\n    PathNode: (props: PathProps) => RenderNode<PathProps>;\n    LineNode: (props: LineProps) => RenderNode<LineProps>;\n    ImageNode: (props: ImageProps) => RenderNode<ImageProps>;\n    OvalNode: (props: OvalProps) => RenderNode<OvalProps>;\n    PatchNode: (props: PatchProps) => RenderNode<PatchProps>;\n    PointsNode: (props: PointsProps) => RenderNode<PointsProps>;\n    DiffRectNode: (props: DiffRectProps) => RenderNode<DiffRectProps>;\n    AtlasNode: (props: AtlasProps) => RenderNode<AtlasProps>;\n\n    // Mask filters\n    BlurMaskFilterNode: (\n      props: BlurMaskFilterProps\n    ) => DeclarationNode<BlurMaskFilterProps>;\n\n    // Path effects\n    DashPathEffectNode: (\n      props: DashPathEffectProps\n    ) => DeclarationNode<DashPathEffectProps>;\n    DiscretePathEffectNode: (\n      props: DiscretePathEffectProps\n    ) => DeclarationNode<DiscretePathEffectProps>;\n    CornerPathEffectNode: (\n      props: CornerPathEffectProps\n    ) => DeclarationNode<CornerPathEffectProps>;\n    Path1DPathEffectNode: (\n      props: Path1DPathEffectProps\n    ) => DeclarationNode<Path1DPathEffectProps>;\n    Path2DPathEffectNode: (\n      props: Path2DPathEffectProps\n    ) => DeclarationNode<Path2DPathEffectProps>;\n    Line2DPathEffectNode: (\n      props: Line2DPathEffectProps\n    ) => DeclarationNode<Line2DPathEffectProps>;\n    SumPathEffectNode: () => DeclarationNode<null>;\n\n    // Image filters\n    BlendImageFilterNode: (\n      props: BlendImageFilterProps\n    ) => DeclarationNode<BlendImageFilterProps>;\n    DropShadowImageFilterNode: (\n      props: DropShadowImageFilterProps\n    ) => DeclarationNode<DropShadowImageFilterProps>;\n    DisplacementMapImageFilterNode: (\n      props: DisplacementMapImageFilterProps\n    ) => DeclarationNode<DisplacementMapImageFilterProps>;\n    BlurImageFilterNode: (\n      props: BlurImageFilterProps\n    ) => DeclarationNode<BlurImageFilterProps>;\n    OffsetImageFilterNode: (\n      props: OffsetImageFilterProps\n    ) => DeclarationNode<OffsetImageFilterProps>;\n    MorphologyImageFilterNode: (\n      props: MorphologyImageFilterProps\n    ) => DeclarationNode<MorphologyImageFilterProps>;\n    RuntimeShaderImageFilterNode: (\n      props: RuntimeShaderImageFilterProps\n    ) => DeclarationNode<RuntimeShaderImageFilterProps>;\n\n    // Color filters\n    MatrixColorFilterNode: (\n      props: MatrixColorFilterProps\n    ) => DeclarationNode<MatrixColorFilterProps>;\n    BlendColorFilterNode: (\n      props: BlendColorFilterProps\n    ) => DeclarationNode<BlendColorFilterProps>;\n    LinearToSRGBGammaColorFilterNode: () => DeclarationNode<null>;\n    SRGBToLinearGammaColorFilterNode: () => DeclarationNode<null>;\n    LumaColorFilterNode: () => DeclarationNode<null>;\n    LerpColorFilterNode: (\n      props: LerpColorFilterProps\n    ) => DeclarationNode<LerpColorFilterProps>;\n\n    // Shaders\n    ShaderNode: (props: ShaderProps) => DeclarationNode<ShaderProps>;\n    ImageShaderNode: (\n      props: ImageShaderProps\n    ) => DeclarationNode<ImageShaderProps>;\n    ColorShaderNode: (props: ColorProps) => DeclarationNode<ColorProps>;\n    TurbulenceNode: (\n      props: TurbulenceProps\n    ) => DeclarationNode<TurbulenceProps>;\n    FractalNoiseNode: (\n      props: FractalNoiseProps\n    ) => DeclarationNode<FractalNoiseProps>;\n    LinearGradientNode: (\n      props: LinearGradientProps\n    ) => DeclarationNode<LinearGradientProps>;\n    RadialGradientNode: (\n      props: RadialGradientProps\n    ) => DeclarationNode<RadialGradientProps>;\n    SweepGradientNode: (\n      props: SweepGradientProps\n    ) => DeclarationNode<SweepGradientProps>;\n    TwoPointConicalGradientNode: (\n      props: TwoPointConicalGradientProps\n    ) => DeclarationNode<TwoPointConicalGradientProps>;\n    PictureNode: (props: PictureProps) => RenderNode<PictureProps>;\n    ImageSVGNode: (props: ImageSVGProps) => RenderNode<ImageSVGProps>;\n    VerticesNode: (props: VerticesProps) => RenderNode<VerticesProps>;\n    TextNode: (prop: TextProps) => RenderNode<TextProps>;\n    TextPathNode: (prop: TextPathProps) => RenderNode<TextPathProps>;\n    TextBlobNode: (prop: TextBlobProps) => RenderNode<TextBlobProps>;\n    GlyphsNode: (prop: GlyphsProps) => RenderNode<GlyphsProps>;\n    BlendNode: (prop: BlendProps) => DeclarationNode<BlendProps>;\n    BackdropFilterNode: (prop: ChildrenProps) => RenderNode<ChildrenProps>;\n    BoxNode: (prop: BoxProps) => RenderNode<BoxProps>;\n    BoxShadowNode: (prop: BoxShadowProps) => DeclarationNode<BoxShadowProps>;\n    LayerNode: (prop: ChildrenProps) => RenderNode<ChildrenProps>;\n\n    // Paragraph\n    ParagraphNode: (props: ParagraphProps) => RenderNode<ParagraphProps>;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      skGroup: SkiaProps<GroupProps>;\n      skLayer: SkiaProps<ChildrenProps>;\n      skPaint: SkiaProps<PaintProps>;\n\n      // Drawings\n      skFill: SkiaProps<DrawingNodeProps>;\n      skImage: SkiaProps<ImageProps>;\n      skCircle: SkiaProps<CircleProps>;\n      skPath: SkiaProps<PathProps>;\n      skLine: SkiaProps<LineProps>;\n      skOval: SkiaProps<OvalProps>;\n      skPatch: SkiaProps<PatchProps>;\n      skPoints: SkiaProps<PointsProps>;\n      skRect: SkiaProps<RectProps>;\n      skRRect: SkiaProps<RoundedRectProps>;\n      skAtlas: SkiaProps<AtlasProps>;\n      skVertices: SkiaProps<VerticesProps>;\n      skText: SkiaProps<TextProps>;\n      skTextPath: SkiaProps<TextPathProps>;\n      skTextBlob: SkiaProps<TextBlobProps>;\n      skGlyphs: SkiaProps<GlyphsProps>;\n      skDiffRect: SkiaProps<DiffRectProps>;\n      skPicture: SkiaProps<PictureProps>;\n      skImageSVG: SkiaProps<ImageSVGProps>;\n\n      // BlurMaskFilters\n      skBlurMaskFilter: SkiaProps<BlurMaskFilterProps>;\n\n      // ImageFilters\n      skBlendImageFilter: SkiaProps<BlendImageFilterProps>;\n      skBlurImageFilter: SkiaProps<BlurImageFilterProps>;\n      skOffsetImageFilter: SkiaProps<OffsetImageFilterProps>;\n      skDropShadowImageFilter: SkiaProps<DropShadowImageFilterProps>;\n      skDisplacementMapImageFilter: SkiaProps<DisplacementMapImageFilterProps>;\n      skRuntimeShaderImageFilter: SkiaProps<RuntimeShaderImageFilterProps>;\n      skMorphologyImageFilter: SkiaProps<MorphologyImageFilterProps>;\n\n      // ColorFilters\n      skMatrixColorFilter: SkiaProps<MatrixColorFilterProps>;\n      skBlendColorFilter: SkiaProps<BlendColorFilterProps>;\n      skLinearToSRGBGammaColorFilter: SkiaProps<ChildrenProps>;\n      skSRGBToLinearGammaColorFilter: SkiaProps<ChildrenProps>;\n      skLumaColorFilter: SkiaProps<ChildrenProps>;\n      skLerpColorFilter: SkiaProps<LerpColorFilterProps>;\n\n      // Shaders\n      skShader: SkiaProps<ShaderProps>;\n      skImageShader: SkiaProps<ImageShaderProps>;\n      skColorShader: SkiaProps<ColorProps>;\n      skTurbulence: SkiaProps<TurbulenceProps>;\n      skFractalNoise: SkiaProps<FractalNoiseProps>;\n      skLinearGradient: SkiaProps<LinearGradientProps>;\n      skRadialGradient: SkiaProps<RadialGradientProps>;\n      skSweepGradient: SkiaProps<SweepGradientProps>;\n      skTwoPointConicalGradient: SkiaProps<TwoPointConicalGradientProps>;\n\n      // Path Effects\n      skDiscretePathEffect: SkiaProps<DiscretePathEffectProps>;\n      skDashPathEffect: SkiaProps<DashPathEffectProps>;\n      skPath1DPathEffect: SkiaProps<Path1DPathEffectProps>;\n      skPath2DPathEffect: SkiaProps<Path2DPathEffectProps>;\n      skCornerPathEffect: SkiaProps<CornerPathEffectProps>;\n      skSumPathEffect: ChildrenProps;\n      skLine2DPathEffect: SkiaProps<Line2DPathEffectProps>;\n\n      // Mixed declarations/drawings\n      skBlend: SkiaProps<BlendProps>;\n      skBackdropFilter: SkiaProps<ChildrenProps>;\n      skBox: SkiaProps<BoxProps>;\n      skBoxShadow: SkiaProps<BoxShadowProps>;\n\n      // Paragraph\n      skParagraph: SkiaProps<ParagraphProps>;\n    }\n  }\n}\n\nexport const createNode = (\n  container: Container,\n  type: NodeType,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: any\n) => {\n  const { Sk } = container;\n  switch (type) {\n    case NodeType.Layer:\n      return Sk.Layer(props);\n    case NodeType.Group:\n      return Sk.Group(props);\n    case NodeType.Paint:\n      return Sk.Paint(props);\n    // Drawings\n    case NodeType.Fill:\n      return Sk.Fill(props);\n    case NodeType.Image:\n      return Sk.Image(props);\n    case NodeType.Circle:\n      return Sk.Circle(props);\n    case NodeType.Path:\n      return Sk.Path(props);\n    case NodeType.Line:\n      return Sk.Line(props);\n    case NodeType.Oval:\n      return Sk.Oval(props);\n    case NodeType.Patch:\n      return Sk.Patch(props);\n    case NodeType.Points:\n      return Sk.Points(props);\n    case NodeType.Rect:\n      return Sk.Rect(props);\n    case NodeType.RRect:\n      return Sk.RRect(props);\n    case NodeType.Vertices:\n      return Sk.Vertices(props);\n    case NodeType.Text:\n      return Sk.Text(props);\n    case NodeType.TextPath:\n      return Sk.TextPath(props);\n    case NodeType.TextBlob:\n      return Sk.TextBlob(props);\n    case NodeType.Glyphs:\n      return Sk.Glyphs(props);\n    case NodeType.Atlas:\n      return Sk.Atlas(props);\n    case NodeType.DiffRect:\n      return Sk.DiffRect(props);\n    case NodeType.Picture:\n      return Sk.Picture(props);\n    case NodeType.ImageSVG:\n      return Sk.ImageSVG(props);\n    // Mask Filter\n    case NodeType.BlurMaskFilter:\n      return Sk.BlurMaskFilter(props);\n    // Image Filter\n    case NodeType.BlendImageFilter:\n      return Sk.BlendImageFilter(props);\n    case NodeType.BlurImageFilter:\n      return Sk.BlurImageFilter(props);\n    case NodeType.OffsetImageFilter:\n      return Sk.OffsetImageFilter(props);\n    case NodeType.DropShadowImageFilter:\n      return Sk.DropShadowImageFilter(props);\n    case NodeType.DisplacementMapImageFilter:\n      return Sk.DisplacementMapImageFilter(props);\n    case NodeType.MorphologyImageFilter:\n      return Sk.MorphologyImageFilter(props);\n    case NodeType.RuntimeShaderImageFilter:\n      return Sk.RuntimeShaderImageFilter(props);\n    // Color Filter\n    case NodeType.MatrixColorFilter:\n      return Sk.MatrixColorFilter(props);\n    case NodeType.BlendColorFilter:\n      return Sk.BlendColorFilter(props);\n    case NodeType.LerpColorFilter:\n      return Sk.LerpColorFilter(props);\n    case NodeType.LumaColorFilter:\n      return Sk.LumaColorFilter();\n    case NodeType.LinearToSRGBGammaColorFilter:\n      return Sk.LinearToSRGBGammaColorFilter();\n    case NodeType.SRGBToLinearGammaColorFilter:\n      return Sk.SRGBToLinearGammaColorFilter();\n    // Shader\n    case NodeType.Shader:\n      return Sk.Shader(props);\n    case NodeType.ImageShader:\n      return Sk.ImageShader(props);\n    case NodeType.ColorShader:\n      return Sk.ColorShader(props);\n    case NodeType.Turbulence:\n      return Sk.Turbulence(props);\n    case NodeType.FractalNoise:\n      return Sk.FractalNoise(props);\n    case NodeType.LinearGradient:\n      return Sk.LinearGradient(props);\n    case NodeType.RadialGradient:\n      return Sk.RadialGradient(props);\n    case NodeType.SweepGradient:\n      return Sk.SweepGradient(props);\n    case NodeType.TwoPointConicalGradient:\n      return Sk.TwoPointConicalGradient(props);\n    // Path Effect\n    case NodeType.CornerPathEffect:\n      return Sk.CornerPathEffect(props);\n    case NodeType.DiscretePathEffect:\n      return Sk.DiscretePathEffect(props);\n    case NodeType.DashPathEffect:\n      return Sk.DashPathEffect(props);\n    case NodeType.Path1DPathEffect:\n      return Sk.Path1DPathEffect(props);\n    case NodeType.Path2DPathEffect:\n      return Sk.Path2DPathEffect(props);\n    case NodeType.SumPathEffect:\n      return Sk.SumPathEffect();\n    case NodeType.Line2DPathEffect:\n      return Sk.Line2DPathEffect(props);\n    // Mixed\n    case NodeType.Blend:\n      return Sk.Blend(props);\n    case NodeType.BackdropFilter:\n      return Sk.BackdropFilter(props);\n    case NodeType.Box:\n      return Sk.Box(props);\n    case NodeType.BoxShadow:\n      return Sk.BoxShadow(props);\n    // Paragraph\n    case NodeType.Paragraph:\n      return Sk.Paragraph(props);\n    default:\n      return exhaustiveCheck(type);\n  }\n};\n"],"mappings":"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"}