{"version":3,"names":["BlendMode","ColorChannel","processUniforms","TileMode","DeclarationType","NodeType","processRadius","enumKey","JsiDeclarationNode","Black","Float32Array","of","MakeInnerShadow","Skia","shadowOnly","dx","dy","sigmaX","sigmaY","color","input","sourceGraphic","ImageFilter","MakeColorFilter","ColorFilter","MakeBlend","Dst","sourceAlpha","SrcIn","f1","SrcOut","f2","MakeOffset","f3","MakeBlur","Decal","f4","MakeCompose","SrcOver","ImageFilterDeclaration","constructor","ctx","type","props","_ctx$imageFilters$pop","imageFilters","pop","composeAndPush","imgf1","save","decorateChildren","imgf2","popAllAsOne","cf","colorFilters","restore","_imgf","imgf","push","OffsetImageFilterNode","OffsetImageFilter","decorate","x","y","DisplacementMapImageFilterNode","DisplacementMapImageFilter","channelX","channelY","scale","shader","shaders","Error","map","MakeShader","MakeDisplacementMap","BlurImageFilterNode","BlurImageFilter","mode","blur","sigma","DropShadowImageFilterNode","DropShadowImageFilter","cl","inner","Color","factory","bind","MakeDropShadowOnly","MakeDropShadow","MorphologyOperator","MorphologyImageFilterNode","MorphologyImageFilter","operator","r","radius","Erode","MakeErode","MakeDilate","BlendImageFilterNode","BlendImageFilter","a","b","RuntimeShaderImageFilterNode","RuntimeShaderImageFilter","source","uniforms","rtb","RuntimeShaderBuilder","MakeRuntimeShader"],"sources":["ImageFilters.ts"],"sourcesContent":["import type { SkImageFilter, SkColor, Skia } from \"../../../skia/types\";\nimport {\n  BlendMode,\n  ColorChannel,\n  processUniforms,\n  TileMode,\n} from \"../../../skia/types\";\nimport type {\n  BlendImageFilterProps,\n  BlurImageFilterProps,\n  DeclarationContext,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  MorphologyImageFilterProps,\n  OffsetImageFilterProps,\n  RuntimeShaderImageFilterProps,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport { processRadius, enumKey } from \"../datatypes\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\n\nconst Black = Float32Array.of(0, 0, 0, 1);\n\nconst MakeInnerShadow = (\n  Skia: Skia,\n  shadowOnly: boolean | undefined,\n  dx: number,\n  dy: number,\n  sigmaX: number,\n  sigmaY: number,\n  color: SkColor,\n  input: SkImageFilter | null\n) => {\n  const sourceGraphic = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.Dst),\n    null\n  );\n  const sourceAlpha = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.SrcIn),\n    null\n  );\n  const f1 = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(color, BlendMode.SrcOut),\n    null\n  );\n  const f2 = Skia.ImageFilter.MakeOffset(dx, dy, f1);\n  const f3 = Skia.ImageFilter.MakeBlur(sigmaX, sigmaY, TileMode.Decal, f2);\n  const f4 = Skia.ImageFilter.MakeBlend(BlendMode.SrcIn, sourceAlpha, f3);\n  if (shadowOnly) {\n    return f4;\n  }\n  return Skia.ImageFilter.MakeCompose(\n    input,\n    Skia.ImageFilter.MakeBlend(BlendMode.SrcOver, sourceGraphic, f4)\n  );\n};\n\nexport abstract class ImageFilterDeclaration<P> extends JsiDeclarationNode<P> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.ImageFilter, type, props);\n  }\n\n  protected input(ctx: DeclarationContext) {\n    return ctx.imageFilters.pop() ?? null;\n  }\n\n  protected composeAndPush(ctx: DeclarationContext, imgf1: SkImageFilter) {\n    ctx.save();\n    this.decorateChildren(ctx);\n    let imgf2 = ctx.imageFilters.popAllAsOne();\n    const cf = ctx.colorFilters.popAllAsOne();\n    ctx.restore();\n    if (cf) {\n      imgf2 = this.Skia.ImageFilter.MakeCompose(\n        imgf2 ?? null,\n        this.Skia.ImageFilter.MakeColorFilter(cf, null)\n      );\n    }\n    const imgf = imgf2\n      ? this.Skia.ImageFilter.MakeCompose(imgf1, imgf2)\n      : imgf1;\n    ctx.imageFilters.push(imgf);\n  }\n}\n\nexport class OffsetImageFilterNode extends ImageFilterDeclaration<OffsetImageFilterProps> {\n  constructor(ctx: NodeContext, props: OffsetImageFilterProps) {\n    super(ctx, NodeType.OffsetImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    this.decorateChildren(ctx);\n    const { x, y } = this.props;\n    const imgf = this.Skia.ImageFilter.MakeOffset(x, y, null);\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport class DisplacementMapImageFilterNode extends ImageFilterDeclaration<DisplacementMapImageFilterProps> {\n  constructor(ctx: NodeContext, props: DisplacementMapImageFilterProps) {\n    super(ctx, NodeType.DisplacementMapImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    this.decorateChildren(ctx);\n    const { channelX, channelY, scale } = this.props;\n    const shader = ctx.shaders.pop();\n    if (!shader) {\n      throw new Error(\"DisplacementMap expects a shader as child\");\n    }\n    const map = this.Skia.ImageFilter.MakeShader(shader, null);\n    const imgf = this.Skia.ImageFilter.MakeDisplacementMap(\n      ColorChannel[enumKey(channelX)],\n      ColorChannel[enumKey(channelY)],\n      scale,\n      map,\n      this.input(ctx)\n    );\n    ctx.imageFilters.push(imgf);\n  }\n}\n\nexport class BlurImageFilterNode extends ImageFilterDeclaration<BlurImageFilterProps> {\n  constructor(ctx: NodeContext, props: BlurImageFilterProps) {\n    super(ctx, NodeType.BlurImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { mode, blur } = this.props;\n    const sigma = processRadius(this.Skia, blur);\n    const imgf = this.Skia.ImageFilter.MakeBlur(\n      sigma.x,\n      sigma.y,\n      TileMode[enumKey(mode)],\n      this.input(ctx)\n    );\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport class DropShadowImageFilterNode extends ImageFilterDeclaration<DropShadowImageFilterProps> {\n  constructor(ctx: NodeContext, props: DropShadowImageFilterProps) {\n    super(ctx, NodeType.DropShadowImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { dx, dy, blur, shadowOnly, color: cl, inner } = this.props;\n    const color = this.Skia.Color(cl);\n    let factory;\n    if (inner) {\n      factory = MakeInnerShadow.bind(null, this.Skia, shadowOnly);\n    } else {\n      factory = shadowOnly\n        ? this.Skia.ImageFilter.MakeDropShadowOnly.bind(this.Skia.ImageFilter)\n        : this.Skia.ImageFilter.MakeDropShadow.bind(this.Skia.ImageFilter);\n    }\n    const imgf = factory(dx, dy, blur, blur, color, this.input(ctx));\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport enum MorphologyOperator {\n  Erode,\n  Dilate,\n}\n\nexport class MorphologyImageFilterNode extends ImageFilterDeclaration<MorphologyImageFilterProps> {\n  constructor(ctx: NodeContext, props: MorphologyImageFilterProps) {\n    super(ctx, NodeType.MorphologyImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { operator } = this.props;\n    const r = processRadius(this.Skia, this.props.radius);\n    let imgf;\n    if (MorphologyOperator[enumKey(operator)] === MorphologyOperator.Erode) {\n      imgf = this.Skia.ImageFilter.MakeErode(r.x, r.y, this.input(ctx));\n    } else {\n      imgf = this.Skia.ImageFilter.MakeDilate(r.x, r.y, this.input(ctx));\n    }\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport class BlendImageFilterNode extends ImageFilterDeclaration<BlendImageFilterProps> {\n  constructor(ctx: NodeContext, props: BlendImageFilterProps) {\n    super(ctx, NodeType.BlendImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { mode } = this.props;\n    const a = ctx.imageFilters.pop();\n    const b = ctx.imageFilters.pop();\n    if (!a || !b) {\n      throw new Error(\"BlendImageFilter requires two image filters\");\n    }\n    const imgf = this.Skia.ImageFilter.MakeBlend(mode, a, b);\n    this.composeAndPush(ctx, imgf);\n  }\n}\n\nexport class RuntimeShaderImageFilterNode extends ImageFilterDeclaration<RuntimeShaderImageFilterProps> {\n  constructor(ctx: NodeContext, props: RuntimeShaderImageFilterProps) {\n    super(ctx, NodeType.RuntimeShaderImageFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { source, uniforms } = this.props;\n    const rtb = this.Skia.RuntimeShaderBuilder(source);\n    if (uniforms) {\n      processUniforms(source, uniforms, rtb);\n    }\n    const imgf = this.Skia.ImageFilter.MakeRuntimeShader(\n      rtb,\n      null,\n      this.input(ctx)\n    );\n    this.composeAndPush(ctx, imgf);\n  }\n}\n"],"mappings":"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"}