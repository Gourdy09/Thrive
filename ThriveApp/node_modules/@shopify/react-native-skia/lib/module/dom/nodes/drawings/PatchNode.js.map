{"version":3,"names":["BlendMode","NodeType","enumKey","JsiDrawingNode","PatchNode","constructor","ctx","props","Patch","deriveProps","colors","blendMode","patch","defaultBlendMode","DstOver","SrcOver","mode","points","pos","c2","c1","map","c","Skia","Color","undefined","draw","canvas","paint","derived","Error","texture","drawPatch"],"sources":["PatchNode.ts"],"sourcesContent":["import type { SkColor, SkPoint } from \"../../../skia/types\";\nimport { BlendMode } from \"../../../skia/types\";\nimport type { DrawingContext, PatchProps } from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport { enumKey } from \"../datatypes\";\nimport { JsiDrawingNode } from \"../DrawingNode\";\nimport type { NodeContext } from \"../Node\";\n\nexport class PatchNode extends JsiDrawingNode<\n  PatchProps,\n  { points: SkPoint[]; colors: SkColor[] | undefined; mode: BlendMode }\n> {\n  constructor(ctx: NodeContext, props: PatchProps) {\n    super(ctx, NodeType.Patch, props);\n  }\n\n  deriveProps() {\n    const { colors, blendMode, patch } = this.props;\n    const defaultBlendMode = colors ? BlendMode.DstOver : BlendMode.SrcOver;\n    const mode = blendMode ? BlendMode[enumKey(blendMode)] : defaultBlendMode;\n    // Patch requires a path with the following constraints:\n    // M tl\n    // C c1 c2 br\n    // C c1 c2 bl\n    // C c1 c2 tl (the redundant point in the last command is removed)\n    return {\n      mode,\n      points: [\n        patch[0].pos,\n        patch[0].c2,\n        patch[1].c1,\n        patch[1].pos,\n        patch[1].c2,\n        patch[2].c1,\n        patch[2].pos,\n        patch[2].c2,\n        patch[3].c1,\n        patch[3].pos,\n        patch[3].c2,\n        patch[0].c1,\n      ],\n      colors: colors ? colors.map((c) => this.Skia.Color(c)) : undefined,\n    };\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    if (!this.derived) {\n      throw new Error(\"PatchNode: derived props not set\");\n    }\n    const { texture } = this.props;\n    const { colors, points, mode } = this.derived;\n    canvas.drawPatch(points, colors, texture, mode, paint);\n  }\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,qBAAqB;AAE/C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,cAAc,QAAQ,gBAAgB;AAG/C,OAAO,MAAMC,SAAS,SAASD,cAAc,CAG3C;EACAE,WAAWA,CAACC,GAAgB,EAAEC,KAAiB,EAAE;IAC/C,KAAK,CAACD,GAAG,EAAEL,QAAQ,CAACO,KAAK,EAAED,KAAK,CAAC;EACnC;EAEAE,WAAWA,CAAA,EAAG;IACZ,MAAM;MAAEC,MAAM;MAAEC,SAAS;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACL,KAAK;IAC/C,MAAMM,gBAAgB,GAAGH,MAAM,GAAGV,SAAS,CAACc,OAAO,GAAGd,SAAS,CAACe,OAAO;IACvE,MAAMC,IAAI,GAAGL,SAAS,GAAGX,SAAS,CAACE,OAAO,CAACS,SAAS,CAAC,CAAC,GAAGE,gBAAgB;IACzE;IACA;IACA;IACA;IACA;IACA,OAAO;MACLG,IAAI;MACJC,MAAM,EAAE,CACNL,KAAK,CAAC,CAAC,CAAC,CAACM,GAAG,EACZN,KAAK,CAAC,CAAC,CAAC,CAACO,EAAE,EACXP,KAAK,CAAC,CAAC,CAAC,CAACQ,EAAE,EACXR,KAAK,CAAC,CAAC,CAAC,CAACM,GAAG,EACZN,KAAK,CAAC,CAAC,CAAC,CAACO,EAAE,EACXP,KAAK,CAAC,CAAC,CAAC,CAACQ,EAAE,EACXR,KAAK,CAAC,CAAC,CAAC,CAACM,GAAG,EACZN,KAAK,CAAC,CAAC,CAAC,CAACO,EAAE,EACXP,KAAK,CAAC,CAAC,CAAC,CAACQ,EAAE,EACXR,KAAK,CAAC,CAAC,CAAC,CAACM,GAAG,EACZN,KAAK,CAAC,CAAC,CAAC,CAACO,EAAE,EACXP,KAAK,CAAC,CAAC,CAAC,CAACQ,EAAE,CACZ;MACDV,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACW,GAAG,CAAEC,CAAC,IAAK,IAAI,CAACC,IAAI,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC,GAAGG;IAC3D,CAAC;EACH;EAEAC,IAAIA,CAAC;IAAEC,MAAM;IAAEC;EAAsB,CAAC,EAAE;IACtC,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;MACjB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;IACrD;IACA,MAAM;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACxB,KAAK;IAC9B,MAAM;MAAEG,MAAM;MAAEO,MAAM;MAAED;IAAK,CAAC,GAAG,IAAI,CAACa,OAAO;IAC7CF,MAAM,CAACK,SAAS,CAACf,MAAM,EAAEP,MAAM,EAAEqB,OAAO,EAAEf,IAAI,EAAEY,KAAK,CAAC;EACxD;AACF"}